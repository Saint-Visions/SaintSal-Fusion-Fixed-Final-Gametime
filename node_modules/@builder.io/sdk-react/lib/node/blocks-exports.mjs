"use client";
import { TARGET as F, isBrowser as G, logger as ee, checkIsDefined as be, isPreviewing as le, isEditing as U, userAttributesService as Ce, getDefaultCanTrack as Z, logFetch as Fe, setupBrowserForEditing as lt, createRegisterComponentMessage as st, getCookieSync as ct, _track as Te, fetchOneEntry as Le, createEditorListener as ut, serializeIncludingFunctions as Ie, handleABTestingSync as dt } from "./server-entry-83d3751d.js";
import { setClientUserAttributes as Mi } from "./server-entry-83d3751d.js";
import { jsx as s, Fragment as P, jsxs as D } from "react/jsx-runtime";
import * as mt from "react";
import { createContext as Oe, useEffect as N, useState as k, useRef as z, useContext as we, createElement as _e } from "react";
import { getFunctionArguments as ft, flattenState as ht, runInNode as bt, parseCode as gt, getBuilderGlobals as yt, set as Ue, fastClone as ye } from "./setIvm-596668c3.js";
import { shouldForceBrowserRuntimeInNode as pt } from "./should-force-browser-runtime-in-node-180c3315.js";
const vt = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"]), xt = (e) => typeof e == "string" && vt.has(e.toLowerCase());
function pe(e) {
  return /* @__PURE__ */ s(P, { children: xt(e.TagName) ? /* @__PURE__ */ s(P, { children: /* @__PURE__ */ s(e.TagName, { ...e.attributes, ...e.actionAttributes }) }) : /* @__PURE__ */ s(P, { children: typeof e.TagName == "string" ? /* @__PURE__ */ s(e.TagName, { ...e.attributes, ...e.actionAttributes, children: e.children }) : /* @__PURE__ */ s(e.TagName, { ...e.attributes, ...e.actionAttributes, children: e.children }) }) });
}
const J = () => {
  switch (F) {
    case "react":
    case "reactNative":
    case "rsc":
      return "className";
    case "svelte":
    case "vue":
    case "solid":
    case "qwik":
    case "angular":
      return "class";
  }
};
function St(e) {
  function t() {
    return {
      ...e.attributes,
      [J()]: `${e.link ? "" : "builder-button"} ${e.attributes[J()] || ""}`,
      ...e.link ? {
        href: e.link,
        target: e.openLinkInNewTab ? "_blank" : void 0,
        role: "link"
      } : {
        role: "button"
      }
    };
  }
  return /* @__PURE__ */ s(
    pe,
    {
      attributes: t(),
      TagName: e.link ? e.builderLinkComponent || "a" : "button",
      actionAttributes: {},
      children: e.text
    }
  );
}
const ve = Oe({
  content: null,
  context: {},
  localState: void 0,
  rootSetState() {
  },
  rootState: {},
  apiKey: null,
  apiVersion: void 0,
  componentInfos: {},
  inheritedStyles: {},
  BlocksWrapper: "div",
  BlocksWrapperProps: {},
  nonce: "",
  model: ""
}), He = Oe({ registeredComponents: {} }), Me = (e, t, n) => {
  const i = String.prototype.split.call(t, /[,[\].]+?/).filter(Boolean).reduce((r, a) => r != null ? r[a] : r, e);
  return i === void 0 || i === e ? n : i;
}, kt = ({
  code: e,
  builder: t,
  context: n,
  event: i,
  localState: r,
  rootSetState: a,
  rootState: o
}) => {
  const l = ft({
    builder: t,
    context: n,
    event: i,
    state: ht({
      rootState: o,
      localState: r,
      rootSetState: a
    })
  });
  return new Function(...l.map(([c]) => c), e)(...l.map(([, c]) => c));
}, Ct = (e) => G() || pt({
  shouldLogWarning: !0
}) ? kt(e) : bt(e), Tt = /^(return )?(\s*)?state(?<getPath>(\.\w+)+)(\s*);?$/, It = /(\s)*var(\s)+_virtual_index(\s)*=(\s)*state(?<getPath>(\.\w+)+)(\s*);?(\s)*return(\s)*_virtual_index(\s)*/, wt = (e) => {
  var t, n, i, r, a, o;
  return ((i = (n = (t = Tt.exec(e.trim())) == null ? void 0 : t.groups) == null ? void 0 : n.getPath) == null ? void 0 : i.slice(1)) || ((o = (a = (r = It.exec(e.trim())) == null ? void 0 : r.groups) == null ? void 0 : a.getPath) == null ? void 0 : o.slice(1));
};
function Q({
  code: e,
  context: t,
  localState: n,
  rootState: i,
  rootSetState: r,
  event: a,
  isExpression: o = !0
}) {
  if (e.trim() === "")
    return;
  const l = wt(e.trim());
  if (l)
    return Me({
      ...i,
      ...n
    }, l);
  const c = {
    code: gt(e, {
      isExpression: o
    }),
    builder: yt(),
    context: t,
    event: a,
    rootSetState: r,
    rootState: i,
    localState: n
  };
  try {
    return Ct(c);
  } catch (d) {
    ee.error("Failed code evaluation: " + d.message, {
      code: e
    });
    return;
  }
}
function Et(e, t) {
  var n;
  return {
    ...(n = e.component) == null ? void 0 : n.options,
    ...e.options,
    ...Rt(e, t)
  };
}
const Rt = (e, t) => {
  var n, i;
  if (((n = e.component) == null ? void 0 : n.name) === "Text" && ((i = e.component.options) != null && i.text) && typeof e.component.options.text == "string")
    return {
      ...e.component.options,
      text: e.component.options.text.replace(/{{([^}]+)}}/g, (r, a) => Q({
        code: a,
        context: t,
        localState: t.localState,
        rootState: t.rootState,
        rootSetState: t.rootSetState
      }))
    };
};
function Pt(e, ...t) {
  const n = Object.assign({}, e);
  for (const i of t)
    delete n[i];
  return n;
}
function oe(e, t, n = null, i = null, r = /* @__PURE__ */ new WeakSet()) {
  if (e == null || typeof e != "object") {
    t(e, (a) => {
      n !== null && i !== null && (n[i] = a);
    });
    return;
  }
  r.has(e) || (r.add(e), Array.isArray(e) ? e.forEach((a, o) => {
    t(a, (c) => {
      e[o] = c;
    }), oe(a, t, e, o, r);
  }) : Object.entries(e).forEach(([a, o]) => {
    t(o, (c) => {
      e[a] = c;
    }), oe(o, t, e, a, r);
  }));
}
function qe(e) {
  return e && typeof e == "object" && e["@type"] === "@builder.io/core:LocalizedValue";
}
function Vt(e) {
  if (!e || !Object.getOwnPropertyNames(e).length)
    return !1;
  let t = !1;
  return oe(e, (n) => {
    if (qe(n)) {
      t = !0;
      return;
    }
  }), t;
}
function At(e, t) {
  return !e || !Object.getOwnPropertyNames(e).length ? {} : (oe(e, (n, i) => {
    var r;
    qe(n) && i((r = n[t]) != null ? r : void 0);
  }), e);
}
function Bt(e, t) {
  var n, i;
  return (n = e.component) != null && n.options && Vt((i = e.component) == null ? void 0 : i.options) && (t || console.warn("[Builder.io] In order to use localized fields in Builder, you must pass a locale prop to the BuilderComponent or to options object while fetching the content to resolve localized fields. Learn more: https://www.builder.io/c/docs/localization-inline#targeting-and-inline-localization"), e.component.options = At(e.component.options, t != null ? t : "Default")), e;
}
function ge(e) {
  if (e === null || typeof e != "object")
    return e;
  if (Array.isArray(e))
    return e.map((n) => ge(n));
  if (e["@type"] === "@builder.io/sdk:Element")
    return e;
  const t = {};
  for (const n in e)
    n !== "meta" && Object.prototype.hasOwnProperty.call(e, n) && (t[n] = ge(e[n]));
  return t;
}
const Nt = ["svelte", "vue", "angular", "qwik", "solid"].includes(F), $t = (e) => {
  if (Nt) {
    const t = ye(e);
    return {
      ...t,
      properties: {
        ...t.properties
      },
      actions: {
        ...t.actions
      }
    };
  } else {
    const t = ge(Pt(e, "children", "meta"));
    return {
      ...t,
      properties: {
        ...t.properties
      },
      actions: {
        ...t.actions
      },
      children: e.children,
      meta: e.meta
    };
  }
}, Wt = ({
  block: e,
  context: t,
  localState: n,
  rootState: i,
  rootSetState: r
}) => {
  if (!e.bindings)
    return e;
  const a = $t(e);
  for (const o in e.bindings) {
    const l = e.bindings[o], c = Q({
      code: l,
      localState: n,
      rootState: i,
      rootSetState: r,
      context: t
    });
    Ue(a, o, c);
  }
  return a;
};
function Dt({
  block: e,
  context: t,
  localState: n,
  rootState: i,
  rootSetState: r
}) {
  let a = e;
  return a = Wt({
    block: a,
    localState: n,
    rootState: i,
    rootSetState: r,
    context: t
  }), a = Bt(a, i.locale), a;
}
const se = (e) => e ? e.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase() : "";
function Ft(e, t, n = {}) {
  let i, r, a, o = null, l = 0;
  const c = function() {
    l = n.leading === !1 ? 0 : Date.now(), o = null, a = e.apply(i, r), o || (i = r = null);
  };
  return function() {
    const d = Date.now();
    !l && n.leading === !1 && (l = d);
    const h = t - (d - l);
    return i = this, r = arguments, h <= 0 || h > t ? (o && (clearTimeout(o), o = null), l = d, a = e.apply(i, r), o || (i = r = null)) : !o && n.trailing !== !1 && (o = setTimeout(c, h)), a;
  };
}
function X(e, ...t) {
  const n = Object(e);
  for (let i = 1; i < arguments.length; i++) {
    const r = arguments[i];
    if (r != null)
      for (const a in r)
        Object.prototype.hasOwnProperty.call(r, a) && (n[a] = r[a]);
  }
  return n;
}
function Lt(e) {
  for (const t of e)
    switch (t.trigger) {
      case "pageLoad":
        Ke(t);
        break;
      case "scrollInView":
        _t(t);
        break;
    }
}
function je(e) {
  console.warn(`Cannot animate element: element with ID ${e} not found!`);
}
function ze(e, t) {
  const n = Ot(e), i = getComputedStyle(t), r = e.steps[0].styles, a = e.steps[e.steps.length - 1].styles, o = [r, a];
  for (const l of o)
    for (const c of n)
      c in l || (l[c] = i[c]);
}
function Ot(e) {
  const t = [];
  for (const n of e.steps)
    for (const i in n.styles)
      t.indexOf(i) === -1 && t.push(i);
  return t;
}
function Ke(e) {
  const t = Array.prototype.slice.call(document.getElementsByClassName(e.elementId || e.id || ""));
  if (!t.length) {
    je(e.elementId || e.id || "");
    return;
  }
  Array.from(t).forEach((n) => {
    ze(e, n), n.style.transition = "none", n.style.transitionDelay = "0", X(n.style, e.steps[0].styles), setTimeout(() => {
      n.style.transition = `all ${e.duration}s ${se(e.easing)}`, e.delay && (n.style.transitionDelay = e.delay + "s"), X(n.style, e.steps[1].styles), setTimeout(() => {
        n.style.transition = "", n.style.transitionDelay = "";
      }, (e.delay || 0) * 1e3 + e.duration * 1e3 + 100);
    });
  });
}
function _t(e) {
  const t = Array.prototype.slice.call(document.getElementsByClassName(e.elementId || e.id || ""));
  if (!t.length) {
    je(e.elementId || e.id || "");
    return;
  }
  Array.from(t).forEach((n) => {
    ze(e, n);
    let i = !1, r = !1;
    function a() {
      !i && l(n) ? (i = !0, r = !0, setTimeout(() => {
        X(n.style, e.steps[1].styles), e.repeat || document.removeEventListener("scroll", o), setTimeout(() => {
          r = !1, e.repeat || (n.style.transition = "", n.style.transitionDelay = "");
        }, (e.duration + (e.delay || 0)) * 1e3 + 100);
      })) : e.repeat && i && !r && !l(n) && (i = !1, X(n.style, e.steps[0].styles));
    }
    const o = Ft(a, 200, {
      leading: !1
    });
    function l(h) {
      const g = h.getBoundingClientRect(), u = window.innerHeight, f = (e.thresholdPercent || 0) / 100 * u;
      return g.bottom > f && g.top < u - f;
    }
    const c = e.steps[0].styles;
    function d() {
      X(n.style, c);
    }
    d(), setTimeout(() => {
      n.style.transition = `all ${e.duration}s ${se(e.easing)}`, e.delay && (n.style.transitionDelay = e.delay + "s");
    }), document.addEventListener("scroll", o, {
      capture: !0,
      passive: !0
    }), a();
  });
}
const Je = (e) => Object.entries(e).map(([n, i]) => {
  if (typeof i == "string")
    return `${se(n)}: ${i};`;
}).filter(be), Ut = (e) => Je(e).join(`
`), Y = ({
  mediaQuery: e,
  className: t,
  styles: n
}) => {
  const i = `.${t} {
    ${Ut(n)}
  }`;
  return e ? `${e} {
      ${i}
    }` : i;
};
function Ht({
  style: e
}) {
  return e;
}
const Mt = ({
  block: e,
  context: t
}) => Ge(Ht({
  style: e.style || {},
  context: t,
  block: e
}));
function Ge(e) {
  switch (F) {
    case "svelte":
    case "vue":
    case "solid":
    case "angular":
      return Je(e).join(" ");
    case "qwik":
    case "reactNative":
    case "react":
    case "rsc":
      return e;
  }
}
const Qe = (e, t) => e ? t ? e.models && e.models.length > 0 && !e.models.includes(t) : !1 : !0, qt = ({
  block: e,
  registeredComponents: t,
  model: n
}) => {
  var a;
  const i = (a = e.component) == null ? void 0 : a.name;
  if (!i)
    return null;
  const r = t[i];
  if (!r || Qe(r, n)) {
    console.warn(`
      Could not find a registered component named "${i}". 
      If you registered it, is the file that registered it imported by the file that needs to render it?`);
    return;
  } else
    return r;
}, jt = ({
  block: e,
  context: t
}) => {
  const {
    repeat: n,
    ...i
  } = e;
  if (!(n != null && n.collection))
    return;
  const r = Q({
    code: n.collection,
    localState: t.localState,
    rootState: t.rootState,
    rootSetState: t.rootSetState,
    context: t.context
  });
  if (!Array.isArray(r))
    return;
  const a = n.collection.split(".").pop(), o = n.itemName || (a ? a + "Item" : "item");
  return r.map((c, d) => ({
    context: {
      ...t,
      localState: {
        ...t.localState,
        $index: d,
        $item: c,
        [o]: c,
        [`$${o}Index`]: d
      }
    },
    block: i
  }));
}, zt = (e, t) => {
  var n;
  return (n = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && n.builderLinkComponent ? {
    builderLinkComponent: t
  } : {};
}, Kt = (e, t, n) => {
  var i;
  return (i = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && i.builderComponents ? {
    builderComponents: Object.fromEntries(Object.entries(t).filter(([a, o]) => !Qe(o, n)))
  } : {};
}, Jt = (e, t) => {
  var n;
  return (n = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && n.builderBlock ? {
    builderBlock: t
  } : {};
}, Gt = (e, t) => {
  var n;
  return (n = e == null ? void 0 : e.shouldReceiveBuilderProps) != null && n.builderContext ? {
    builderContext: t
  } : {};
}, Ee = (e) => e.toString(), Ye = {
  xsmall: {
    min: 0,
    default: 160,
    max: 320
  },
  small: {
    min: 321,
    default: 321,
    max: 640
  },
  medium: {
    min: 641,
    default: 642,
    max: 991
  },
  large: {
    min: 990,
    default: 991,
    max: 1200
  }
}, ue = (e, t = Ye) => `@media (max-width: ${t[e].max}px)`, Xe = (e) => {
  const t = ye(Ye);
  if (!e)
    return t;
  const {
    xsmall: n,
    small: i,
    medium: r
  } = e;
  if (n) {
    const c = Math.floor(n / 2);
    t.xsmall = {
      max: n,
      min: c,
      default: c + 1
    };
  }
  if (!i || !r)
    return t;
  const a = n ? t.xsmall.max + 1 : Math.floor(i / 2);
  t.small = {
    max: i,
    min: a,
    default: a + 1
  };
  const o = t.small.max + 1;
  t.medium = {
    max: r,
    min: o,
    default: o + 1
  };
  const l = t.medium.max + 1;
  return t.large = {
    max: 2e3,
    // TODO: decide upper limit
    min: l,
    default: l + 1
  }, t;
};
function te(e) {
  return /* @__PURE__ */ s(
    "style",
    {
      dangerouslySetInnerHTML: { __html: e.styles },
      "data-id": e.id,
      nonce: e.nonce
    }
  );
}
function Qt(e) {
  function t() {
    const i = e.block;
    return be(i.hide) ? !i.hide : be(i.show) ? i.show : !0;
  }
  function n() {
    var T, E, _, H, q;
    const i = e.block, r = i.responsiveStyles, a = e.context.content, o = Xe(
      ((T = a == null ? void 0 : a.meta) == null ? void 0 : T.breakpoints) || {}
    ), l = !!((_ = (E = a == null ? void 0 : a.meta) == null ? void 0 : E.breakpoints) != null && _.xsmall), c = r == null ? void 0 : r.large, d = r == null ? void 0 : r.medium, h = r == null ? void 0 : r.small, g = r == null ? void 0 : r.xsmall, u = i.id;
    if (!u)
      return "";
    const x = c ? Y({
      className: u,
      styles: c
    }) : "", f = d ? Y({
      className: u,
      styles: d,
      mediaQuery: ue(
        "medium",
        o
      )
    }) : "", m = h ? Y({
      className: u,
      styles: h,
      mediaQuery: ue(
        "small",
        o
      )
    }) : "", y = g && l ? Y({
      className: u,
      styles: g,
      mediaQuery: ue(
        "xsmall",
        o
      )
    }) : "", b = i.animations && i.animations.find((p) => p.trigger === "hover");
    let S = "";
    if (b) {
      const p = ((q = (H = b.steps) == null ? void 0 : H[1]) == null ? void 0 : q.styles) || {};
      S = Y({
        className: `${u}:hover`,
        styles: {
          ...p,
          transition: `all ${b.duration}s ${se(
            b.easing
          )}`,
          transitionDelay: b.delay ? `${b.delay}s` : "0s"
        }
      }) || "";
    }
    return [
      x,
      f,
      m,
      y,
      S
    ].join(" ");
  }
  return /* @__PURE__ */ s(P, { children: n() && t() ? /* @__PURE__ */ s(P, { children: /* @__PURE__ */ s(
    te,
    {
      id: "builderio-block",
      styles: n(),
      nonce: e.context.nonce
    }
  ) }) : null });
}
function Yt(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
const Xt = (e) => `on${Yt(e)}`, Zt = (e, t) => (n) => Q({
  code: e,
  context: t.context,
  localState: t.localState,
  rootState: t.rootState,
  rootSetState: t.rootSetState,
  event: n,
  isExpression: !1
});
function Ze(e) {
  var i;
  const t = {}, n = (i = e.block.actions) != null ? i : {};
  for (const r in n) {
    if (!n.hasOwnProperty(r))
      continue;
    const a = n[r];
    let o = Xt(r);
    if (e.stripPrefix)
      switch (F) {
        case "vue":
          o = o.replace("v-on:", "");
          break;
        case "svelte":
          o = o.replace("on:", "");
          break;
      }
    t[o] = Zt(a, e);
  }
  return t;
}
function en({
  properties: e
}) {
  return e;
}
const tn = (e) => ({
  href: e.href
});
function xe({
  block: e,
  context: t
}) {
  var i;
  const n = {
    ...tn(e),
    ...e.properties,
    "builder-id": e.id,
    style: Mt({
      block: e,
      context: t
    }),
    [J()]: [e.id, "builder-block", e.class, (i = e.properties) == null ? void 0 : i.class].filter(Boolean).join(" ")
  };
  return en({
    properties: n,
    context: t,
    block: e
  });
}
function nn(e) {
  return /* @__PURE__ */ s(
    pe,
    {
      TagName: e.Wrapper,
      attributes: xe({
        block: e.block,
        context: e.context
      }),
      actionAttributes: Ze({
        block: e.block,
        rootState: e.context.rootState,
        rootSetState: e.context.rootSetState,
        localState: e.context.localState,
        context: e.context.context,
        stripPrefix: !0
      }),
      children: e.children
    }
  );
}
function rn(e) {
  return N(() => {
  }, []), /* @__PURE__ */ s(P, { children: e.children });
}
function an(e) {
  var i, r;
  k(() => 0);
  function t() {
    return e.includeBlockProps ? {
      ...xe({
        block: e.block,
        context: e.context
      }),
      ...Ze({
        block: e.block,
        rootState: e.context.rootState,
        rootSetState: e.context.rootSetState,
        localState: e.context.localState,
        context: e.context.context
      })
    } : {};
  }
  function n() {
    return e.wrapperProps;
  }
  return N(() => {
  }, [e.wrapperProps, (r = (i = e.block) == null ? void 0 : i.component) == null ? void 0 : r.options]), /* @__PURE__ */ s(P, { children: e.Wrapper.load ? /* @__PURE__ */ s(P, { children: /* @__PURE__ */ s(
    rn,
    {
      load: e.Wrapper.load,
      fallback: e.Wrapper.fallback,
      props: e.wrapperProps,
      attributes: t(),
      children: e.children
    }
  ) }) : /* @__PURE__ */ s(e.Wrapper, { ...n(), attributes: t(), children: e.children }) });
}
const on = ({
  componentOptions: e,
  builderBlock: t,
  context: n,
  componentRef: i,
  includeBlockProps: r,
  isInteractive: a,
  contextValue: o
}) => {
  const l = {
    ...e,
    /**
     * If `noWrap` is set to `true`, then the block's props/attributes are provided to the
     * component itself directly. Otherwise, they are provided to the wrapper element.
     */
    ...r ? {
      attributes: xe({
        block: t,
        context: o
      })
    } : {}
  };
  return a ? {
    Wrapper: i,
    block: t,
    context: n,
    wrapperProps: e,
    includeBlockProps: r
  } : l;
};
function Re(e) {
  var i;
  k(() => !1);
  const [t, n] = k(
    () => e.isInteractive ? an : e.componentRef
  );
  return /* @__PURE__ */ s(P, { children: e.componentRef ? /* @__PURE__ */ s(P, { children: /* @__PURE__ */ s(
    t,
    {
      ...on({
        componentOptions: e.componentOptions,
        builderBlock: e.builderBlock,
        context: e.context,
        componentRef: e.componentRef,
        linkComponent: e.linkComponent,
        includeBlockProps: e.includeBlockProps,
        isInteractive: e.isInteractive,
        contextValue: e.context
      }),
      children: e.componentRef ? /* @__PURE__ */ s(P, { children: (i = e.blockChildren) == null ? void 0 : i.map((r) => /* @__PURE__ */ s(
        ce,
        {
          block: r,
          context: e.context,
          registeredComponents: e.registeredComponents,
          linkComponent: e.linkComponent
        },
        r.id
      )) }) : null
    }
  ) }) : null });
}
function Pe(e) {
  const [t, n] = k(() => e.repeatContext);
  return N(() => {
    n(e.repeatContext);
  }, [e.repeatContext]), /* @__PURE__ */ s(ve.Provider, { value: t, children: /* @__PURE__ */ s(
    ce,
    {
      block: e.block,
      context: t,
      registeredComponents: e.registeredComponents,
      linkComponent: e.linkComponent
    }
  ) });
}
function ce(e) {
  var h, g, u, x;
  function t() {
    return jt({
      block: e.block,
      context: e.context
    });
  }
  const [n, i] = k(() => ({
    value: null,
    update: !1
  }));
  function r() {
    var m;
    if (n.value && !n.update && !le())
      return n.value;
    const f = (m = e.block.repeat) != null && m.collection ? e.block : Dt({
      block: e.block,
      localState: e.context.localState,
      rootState: e.context.rootState,
      rootSetState: e.context.rootSetState,
      context: e.context.context
    });
    return n.value = f, n.update = !1, f;
  }
  function a() {
    return qt({
      block: r(),
      registeredComponents: e.registeredComponents,
      model: e.context.model
    });
  }
  function o() {
    var m;
    return e.block.tagName === "a" || ((m = r().properties) == null ? void 0 : m.href) || r().href ? e.linkComponent || "a" : e.block.tagName || "div";
  }
  function l() {
    var y, b;
    if ((y = e.block.repeat) != null && y.collection)
      return !!((b = t == null ? void 0 : t()) != null && b.length);
    const f = "hide" in r() ? r().hide : !1;
    return ("show" in r() ? r().show : !0) && !f;
  }
  function c() {
    var m, y;
    return !((m = a == null ? void 0 : a()) != null && m.component) && !t() ? (y = r().children) != null ? y : [] : [];
  }
  function d() {
    var f, m, y, b;
    return {
      blockChildren: (f = r().children) != null ? f : [],
      componentRef: (m = a == null ? void 0 : a()) == null ? void 0 : m.component,
      componentOptions: {
        ...Et(r(), e.context),
        ...Jt(a(), r()),
        ...Gt(a(), e.context),
        ...zt(a(), e.linkComponent),
        ...Kt(
          a(),
          e.registeredComponents,
          e.context.model
        )
      },
      context: e.context,
      linkComponent: e.linkComponent,
      registeredComponents: e.registeredComponents,
      builderBlock: r(),
      includeBlockProps: ((y = a == null ? void 0 : a()) == null ? void 0 : y.noWrap) === !0,
      isInteractive: !((b = a == null ? void 0 : a()) != null && b.isRSC && F === "rsc")
    };
  }
  return N(() => {
    const f = r().id, m = r().animations;
    m && f && Lt(
      m.map((y) => ({
        ...y,
        elementId: f
      }))
    );
  }, []), N(() => {
    n.update = !0;
  }), /* @__PURE__ */ s(P, { children: l() ? /* @__PURE__ */ D(P, { children: [
    /* @__PURE__ */ s(Qt, { block: r(), context: e.context }),
    (h = a == null ? void 0 : a()) != null && h.noWrap ? t() ? /* @__PURE__ */ s(P, { children: (x = t()) == null ? void 0 : x.map((f, m) => /* @__PURE__ */ s(
      Pe,
      {
        repeatContext: f.context,
        block: f.block,
        registeredComponents: e.registeredComponents,
        linkComponent: e.linkComponent
      },
      Ee(m)
    )) }) : /* @__PURE__ */ s(
      Re,
      {
        componentRef: d().componentRef,
        componentOptions: d().componentOptions,
        blockChildren: d().blockChildren,
        context: d().context,
        registeredComponents: d().registeredComponents,
        linkComponent: d().linkComponent,
        builderBlock: d().builderBlock,
        includeBlockProps: d().includeBlockProps,
        isInteractive: d().isInteractive
      }
    ) : /* @__PURE__ */ s(P, { children: t() ? /* @__PURE__ */ s(P, { children: (u = t()) == null ? void 0 : u.map((f, m) => /* @__PURE__ */ s(
      Pe,
      {
        repeatContext: f.context,
        block: f.block,
        registeredComponents: e.registeredComponents,
        linkComponent: e.linkComponent
      },
      Ee(m)
    )) }) : /* @__PURE__ */ D(
      nn,
      {
        Wrapper: o(),
        block: r(),
        context: e.context,
        children: [
          /* @__PURE__ */ s(
            Re,
            {
              componentRef: d().componentRef,
              componentOptions: d().componentOptions,
              blockChildren: d().blockChildren,
              context: d().context,
              registeredComponents: d().registeredComponents,
              linkComponent: d().linkComponent,
              builderBlock: d().builderBlock,
              includeBlockProps: d().includeBlockProps,
              isInteractive: d().isInteractive
            }
          ),
          (g = c()) == null ? void 0 : g.map((f) => /* @__PURE__ */ s(
            ce,
            {
              block: f,
              registeredComponents: e.registeredComponents,
              linkComponent: e.linkComponent,
              context: e.context
            },
            f.id
          ))
        ]
      }
    ) })
  ] }) : null });
}
function ln(e) {
  const t = z(null);
  k(() => !1);
  function n() {
    var o;
    return [
      "builder-blocks",
      (o = e.blocks) != null && o.length ? "" : "no-blocks",
      e.classNameProp
    ].filter(Boolean).join(" ");
  }
  function i() {
    if (!e.path)
      return;
    const o = "this.", l = "component.options.";
    return e.path.startsWith(o) ? e.path.replace(o, "") : e.path.startsWith(l) ? e.path : `${l}${e.path || ""}`;
  }
  function r() {
    var o, l;
    U() && !((o = e.blocks) != null && o.length) && ((l = window.parent) == null || l.postMessage(
      {
        type: "builder.clickEmptyBlocks",
        data: {
          parentElementId: e.parent,
          dataPath: i()
        }
      },
      "*"
    ));
  }
  function a() {
    var o, l;
    U() && !((o = e.blocks) != null && o.length) && ((l = window.parent) == null || l.postMessage(
      {
        type: "builder.hoverEmptyBlocks",
        data: {
          parentElementId: e.parent,
          dataPath: i()
        }
      },
      "*"
    ));
  }
  return N(() => {
  }, []), N(() => {
  }, [e.blocks]), /* @__PURE__ */ D(P, { children: [
    /* @__PURE__ */ s("style", { children: `.props-blocks-wrapper-b46bf284 {
  display: flex;
  flex-direction: column;
  align-items: stretch;
}` }),
    /* @__PURE__ */ s(
      e.BlocksWrapper,
      {
        ref: t,
        className: n() + " props-blocks-wrapper-b46bf284",
        "builder-path": i(),
        "builder-parent-id": e.parent,
        style: e.styleProp,
        onClick: (o) => r(),
        onMouseEnter: (o) => a(),
        onKeyPress: (o) => r(),
        ...e.BlocksWrapperProps,
        children: e.children
      }
    )
  ] });
}
function M(e) {
  var i, r, a;
  const t = we(ve), n = we(He);
  return /* @__PURE__ */ D(
    ln,
    {
      blocks: e.blocks,
      parent: e.parent,
      path: e.path,
      styleProp: e.styleProp,
      BlocksWrapperProps: e.BlocksWrapperProps || ((i = e.context) == null ? void 0 : i.BlocksWrapperProps) || (t == null ? void 0 : t.BlocksWrapperProps),
      classNameProp: e.className,
      BlocksWrapper: ((r = e.context) == null ? void 0 : r.BlocksWrapper) || (t == null ? void 0 : t.BlocksWrapper),
      children: [
        e.children,
        e.blocks ? /* @__PURE__ */ s(P, { children: (a = e.blocks) == null ? void 0 : a.map((o) => /* @__PURE__ */ s(
          ce,
          {
            block: o,
            linkComponent: e.linkComponent,
            context: e.context || t,
            registeredComponents: e.registeredComponents || (n == null ? void 0 : n.registeredComponents)
          },
          o.id
        )) }) : null
      ]
    }
  );
}
const sn = (e) => `builder-columns ${e}-breakpoints`;
function cn(e) {
  var m, y;
  function t() {
    return typeof e.space == "number" ? e.space || 0 : 20;
  }
  function n() {
    return e.columns || [];
  }
  function i() {
    return e.stackColumnsAt || "tablet";
  }
  function r(b) {
    return b.link ? e.builderLinkComponent || "a" : "div";
  }
  function a(b) {
    var S;
    return ((S = n()[b]) == null ? void 0 : S.width) || 100 / n().length;
  }
  function o(b) {
    const S = a(b), T = t() * (n().length - 1) * (S / 100);
    return `calc(${S}% - ${T}px)`;
  }
  function l({
    stackedStyle: b,
    desktopStyle: S
  }) {
    return i() === "tablet" ? b : S;
  }
  function c({
    stackedStyle: b,
    desktopStyle: S
  }) {
    return i() === "never" ? S : b;
  }
  function d() {
    return e.stackColumnsAt === "never" ? "row" : e.reverseColumnsWhenStacked ? "column-reverse" : "column";
  }
  function h() {
    return {
      "--flex-dir": d(),
      "--flex-dir-tablet": l({
        stackedStyle: d(),
        desktopStyle: "row"
      })
    };
  }
  function g(b) {
    const S = b === 0 ? 0 : t(), T = o(b), E = `${S}px`, _ = "100%", H = 0;
    return {
      ...{
        display: "flex",
        flexDirection: "column",
        alignItems: "stretch"
      },
      width: T,
      ["marginLeft"]: E,
      "--column-width-mobile": c({
        stackedStyle: _,
        desktopStyle: T
      }),
      "--column-margin-left-mobile": c({
        stackedStyle: H,
        desktopStyle: E
      }),
      "--column-width-tablet": l({
        stackedStyle: _,
        desktopStyle: T
      }),
      "--column-margin-left-tablet": l({
        stackedStyle: H,
        desktopStyle: E
      })
    };
  }
  function u(b) {
    var T, E;
    return Xe(
      ((E = (T = e.builderContext.content) == null ? void 0 : T.meta) == null ? void 0 : E.breakpoints) || {}
    )[b].max;
  }
  function x() {
    const b = `.${e.builderBlock.id}-breakpoints > .builder-column`;
    return `
        @media (max-width: ${u("medium")}px) {
          .${e.builderBlock.id}-breakpoints {
            flex-direction: var(--flex-dir-tablet);
            align-items: stretch;
          }

          ${b} {
            width: var(--column-width-tablet) !important;
            margin-left: var(--column-margin-left-tablet) !important;
          }
        }

        @media (max-width: ${u("small")}px) {
          .${e.builderBlock.id}-breakpoints {
            flex-direction: var(--flex-dir);
            align-items: stretch;
          }

          ${b} {
            width: var(--column-width-mobile) !important;
            margin-left: var(--column-margin-left-mobile) !important;
          }
        },
      `;
  }
  function f(b, S) {
    return {
      ...b.link ? {
        href: b.link
      } : {},
      [J()]: "builder-column",
      style: Ge(g(S))
    };
  }
  return /* @__PURE__ */ D(P, { children: [
    /* @__PURE__ */ s("style", { children: `.div-0369db37 {
  display: flex;
  line-height: normal;
  height: 100%;
}` }),
    /* @__PURE__ */ D(
      "div",
      {
        className: sn((m = e.builderBlock) == null ? void 0 : m.id) + " div-0369db37",
        style: h(),
        children: [
          /* @__PURE__ */ s(
            te,
            {
              id: "builderio-columns",
              styles: x(),
              nonce: e.builderContext.nonce
            }
          ),
          (y = e.columns) == null ? void 0 : y.map((b, S) => /* @__PURE__ */ s(
            pe,
            {
              TagName: r(b),
              actionAttributes: {},
              attributes: f(b, S),
              children: /* @__PURE__ */ s(
                M,
                {
                  path: `columns.${S}.blocks`,
                  parent: e.builderBlock.id,
                  context: e.builderContext,
                  registeredComponents: e.builderComponents,
                  linkComponent: e.builderLinkComponent,
                  blocks: b.blocks,
                  styleProp: {
                    flexGrow: "1"
                  }
                }
              )
            },
            S
          ))
        ]
      }
    )
  ] });
}
function un(e) {
  return /* @__PURE__ */ s("span", { children: e.children });
}
function Ve(e) {
  return e.replace(/http(s)?:/, "");
}
function dn(e = "", t, n) {
  const i = new RegExp("([?&])" + t + "=.*?(&|$)", "i"), r = e.indexOf("?") !== -1 ? "&" : "?";
  return e.match(i) ? e.replace(i, "$1" + t + "=" + encodeURIComponent(n) + "$2") : e + r + t + "=" + encodeURIComponent(n);
}
function mn(e, t) {
  if (!e || !(e != null && e.match(/cdn\.shopify\.com/)) || !t)
    return e;
  if (t === "master")
    return Ve(e);
  const n = e.match(/(_\d+x(\d+)?)?(\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?)/i);
  if (n) {
    const i = e.split(n[0]), r = n[3], a = t.match("x") ? t : `${t}x`;
    return Ve(`${i[0]}_${a}${r}`);
  }
  return null;
}
function ne(e) {
  if (!e)
    return e;
  const t = [100, 200, 400, 800, 1200, 1600, 2e3];
  if (e.match(/builder\.io/)) {
    let n = e;
    const i = Number(e.split("?width=")[1]);
    return isNaN(i) || (n = `${n} ${i}w`), t.filter((r) => r !== i).map((r) => `${dn(e, "width", r)} ${r}w`).concat([n]).join(", ");
  }
  return e.match(/cdn\.shopify\.com/) ? t.map((n) => [mn(e, `${n}x${n}`), n]).filter(([n]) => !!n).map(([n, i]) => `${n} ${i}w`).concat([e]).join(", ") : e;
}
function fn(e) {
  var r, a, o, l, c, d;
  function t() {
    var u;
    const g = e.image || e.src;
    if (!g || // We can auto add srcset for cdn.builder.io and shopify
    // images, otherwise you can supply this prop manually
    !(typeof g == "string" && (g.match(/builder\.io/) || g.match(/cdn\.shopify\.com/))))
      return e.srcset;
    if (!e.noWebp) {
      if (e.srcset && ((u = e.image) != null && u.includes("builder.io/api/v1/image"))) {
        if (!e.srcset.includes(e.image.split("?")[0]))
          return console.debug("Removed given srcset"), ne(g);
      } else if (e.image && !e.srcset)
        return ne(g);
      return ne(g);
    }
  }
  function n() {
    var h;
    return (h = t == null ? void 0 : t()) != null && h.match(/builder\.io/) && !e.noWebp ? t().replace(/\?/g, "?format=webp&") : "";
  }
  function i() {
    const h = {
      position: "absolute",
      height: "100%",
      width: "100%",
      left: "0px",
      top: "0px"
    };
    return e.aspectRatio ? h : void 0;
  }
  return N(() => {
  }, []), /* @__PURE__ */ D(P, { children: [
    /* @__PURE__ */ s("style", { children: `.img-3cc22d08 {
  opacity: 1;
  transition: opacity 0.2s ease-in-out;
}.div-3cc22d08 {
  width: 100%;
  pointer-events: none;
  font-size: 0;
}.div-3cc22d08-2 {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}` }),
    /* @__PURE__ */ D(P, { children: [
      /* @__PURE__ */ D("picture", { children: [
        n() ? /* @__PURE__ */ s("source", { type: "image/webp", srcSet: n() }) : null,
        /* @__PURE__ */ s(
          "img",
          {
            loading: e.highPriority ? "eager" : "lazy",
            fetchPriority: e.highPriority ? "high" : "auto",
            alt: e.altText,
            title: e.title,
            role: e.altText ? void 0 : "presentation",
            style: {
              objectPosition: e.backgroundPosition || "center",
              objectFit: e.backgroundSize || "cover",
              ...i()
            },
            className: "builder-image" + (e.className ? " " + e.className : "") + " img-3cc22d08",
            src: e.image,
            srcSet: t(),
            sizes: e.sizes
          }
        )
      ] }),
      e.aspectRatio && !((a = (r = e.builderBlock) == null ? void 0 : r.children) != null && a.length && e.fitContent) ? /* @__PURE__ */ s(
        "div",
        {
          className: "builder-image-sizer div-3cc22d08",
          style: {
            paddingTop: e.aspectRatio * 100 + "%"
          }
        }
      ) : null,
      (l = (o = e.builderBlock) == null ? void 0 : o.children) != null && l.length && e.fitContent ? /* @__PURE__ */ s(P, { children: e.children }) : null,
      !e.fitContent && ((d = (c = e.builderBlock) == null ? void 0 : c.children) != null && d.length) ? /* @__PURE__ */ s("div", { className: "div-3cc22d08-2", children: e.children }) : null
    ] })
  ] });
}
function hn(e) {
  return /* @__PURE__ */ s(
    "section",
    {
      ...e.attributes,
      style: {
        width: "100%",
        alignSelf: "stretch",
        flexGrow: 1,
        boxSizing: "border-box",
        maxWidth: e.maxWidth || 1200,
        display: "flex",
        flexDirection: "column",
        alignItems: "stretch",
        marginLeft: "auto",
        marginRight: "auto"
      },
      children: e.children
    }
  );
}
function bn(e, t, n, i) {
  function r(d) {
    return typeof d == "string";
  }
  function a(d) {
    return typeof d == "number";
  }
  function o(d, h) {
    return (() => {
      const u = h.property, x = h.operator;
      let f = h.value;
      if (h && h.property === "urlPath" && h.value && typeof h.value == "string" && h.value !== "/" && h.value.endsWith("/") && (f = h.value.slice(0, -1)), !(u && x))
        return !0;
      if (Array.isArray(f))
        return x === "isNot" ? f.every((y) => o(d, {
          property: u,
          operator: x,
          value: y
        })) : !!f.find((y) => o(d, {
          property: u,
          operator: x,
          value: y
        }));
      const m = d[u];
      if (Array.isArray(m))
        return m.includes(f);
      switch (x) {
        case "is":
          return m === f;
        case "isNot":
          return m !== f;
        case "contains":
          return (r(m) || Array.isArray(m)) && m.includes(String(f));
        case "startsWith":
          return r(m) && m.startsWith(String(f));
        case "endsWith":
          return r(m) && m.endsWith(String(f));
        case "greaterThan":
          return a(m) && a(f) && m > f;
        case "lessThan":
          return a(m) && a(f) && m < f;
        case "greaterThanOrEqualTo":
          return a(m) && a(f) && m >= f;
        case "lessThanOrEqualTo":
          return a(m) && a(f) && m <= f;
        default:
          return !1;
      }
    })();
  }
  const l = {
    query: t,
    startDate: n,
    endDate: i
  }, c = e.date && new Date(e.date) || /* @__PURE__ */ new Date();
  return l.startDate && new Date(l.startDate) > c || l.endDate && new Date(l.endDate) < c ? !1 : !l.query || !l.query.length ? !0 : l.query.every((d) => o(e, d));
}
const gn = `function getPersonalizedVariant(variants, blockId, isHydrationTarget, locale) {
  if (!navigator.cookieEnabled) {
    return;
  }
  function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  const attributes = JSON.parse(getCookie('builder.userAttributes') || '{}');
  if (locale) {
    attributes.locale = locale;
  }
  const winningVariantIndex = variants?.findIndex(function (variant) {
    return window.filterWithCustomTargeting(attributes, variant.query, variant.startDate, variant.endDate);
  });
  const parentDiv = document.currentScript?.parentElement;
  const variantId = parentDiv?.getAttribute('data-variant-id');
  const isDefaultVariant = variantId === \`\${blockId}-default\`;
  const isWinningVariant = winningVariantIndex !== -1 && variantId === \`\${blockId}-\${winningVariantIndex}\` || winningVariantIndex === -1 && isDefaultVariant;
  if (isWinningVariant && !isDefaultVariant) {
    parentDiv?.removeAttribute('hidden');
    parentDiv?.removeAttribute('aria-hidden');
  } else if (!isWinningVariant && isDefaultVariant) {
    parentDiv?.setAttribute('hidden', 'true');
    parentDiv?.setAttribute('aria-hidden', 'true');
  }
  if (isHydrationTarget) {
    if (!isWinningVariant) {
      const itsStyleEl = parentDiv?.previousElementSibling;
      if (itsStyleEl) {
        itsStyleEl.remove();
      }
      parentDiv?.remove();
    }
    const thisScript = document.currentScript;
    if (thisScript) {
      thisScript.remove();
    }
  }
}`, yn = `function filterWithCustomTargeting(userAttributes, query, startDate, endDate) {
  function isString(val) {
    return typeof val === 'string';
  }
  function isNumber(val) {
    return typeof val === 'number';
  }
  function objectMatchesQuery(userattr, query) {
    const result = (() => {
      const property = query.property;
      const operator = query.operator;
      let testValue = query.value;
      if (query && query.property === 'urlPath' && query.value && typeof query.value === 'string' && query.value !== '/' && query.value.endsWith('/')) {
        testValue = query.value.slice(0, -1);
      }
      if (!(property && operator)) {
        return true;
      }
      if (Array.isArray(testValue)) {
        if (operator === 'isNot') {
          return testValue.every(val => objectMatchesQuery(userattr, {
            property,
            operator,
            value: val
          }));
        }
        return !!testValue.find(val => objectMatchesQuery(userattr, {
          property,
          operator,
          value: val
        }));
      }
      const value = userattr[property];
      if (Array.isArray(value)) {
        return value.includes(testValue);
      }
      switch (operator) {
        case 'is':
          return value === testValue;
        case 'isNot':
          return value !== testValue;
        case 'contains':
          return (isString(value) || Array.isArray(value)) && value.includes(String(testValue));
        case 'startsWith':
          return isString(value) && value.startsWith(String(testValue));
        case 'endsWith':
          return isString(value) && value.endsWith(String(testValue));
        case 'greaterThan':
          return isNumber(value) && isNumber(testValue) && value > testValue;
        case 'lessThan':
          return isNumber(value) && isNumber(testValue) && value < testValue;
        case 'greaterThanOrEqualTo':
          return isNumber(value) && isNumber(testValue) && value >= testValue;
        case 'lessThanOrEqualTo':
          return isNumber(value) && isNumber(testValue) && value <= testValue;
        default:
          return false;
      }
    })();
    return result;
  }
  const item = {
    query,
    startDate,
    endDate
  };
  const now = userAttributes.date && new Date(userAttributes.date) || new Date();
  if (item.startDate && new Date(item.startDate) > now) {
    return false;
  } else if (item.endDate && new Date(item.endDate) < now) {
    return false;
  }
  if (!item.query || !item.query.length) {
    return true;
  }
  return item.query.every(filter => {
    return objectMatchesQuery(userAttributes, filter);
  });
}`, pn = `function updateVisibilityStylesScript(variants, blockId, isHydrationTarget, locale) {
  function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  const visibilityStylesEl = document.currentScript?.previousElementSibling;
  if (!visibilityStylesEl) {
    return;
  }
  if (isHydrationTarget) {
    visibilityStylesEl.remove();
    const currentScript = document.currentScript;
    if (currentScript) {
      currentScript.remove();
    }
  } else {
    const attributes = JSON.parse(getCookie('builder.userAttributes') || '{}');
    if (locale) {
      attributes.locale = locale;
    }
    const winningVariantIndex = variants?.findIndex(function (variant) {
      return window.filterWithCustomTargeting(attributes, variant.query, variant.startDate, variant.endDate);
    });
    if (winningVariantIndex !== -1) {
      let newStyleStr = variants?.map((_, index) => {
        if (index === winningVariantIndex) return '';
        return \`div[data-variant-id="\${blockId}-\${index}"] { display: none !important; } \`;
      }).join('') || '';
      newStyleStr += \`div[data-variant-id="\${blockId}-default"] { display: none !important; } \`;
      visibilityStylesEl.innerHTML = newStyleStr;
    }
  }
}`, ie = "default", vn = "filterWithCustomTargeting", et = "builderIoPersonalization", tt = "updateVisibilityStylesScript", nt = ["react", "vue", "svelte", "qwik"], re = ["vue", "svelte", "qwik"];
function xn(e, t) {
  return !(e && e.length > 0) || !t ? !1 : re.includes(F) ? !0 : !G();
}
function Sn({
  variants: e,
  previewingIndex: t,
  isHydrated: n,
  filteredVariants: i,
  fallbackBlocks: r
}) {
  var o;
  const a = {
    blocks: r != null ? r : [],
    path: "this.children",
    index: ie
  };
  if (n && U()) {
    if (typeof t == "number" && t < ((o = e == null ? void 0 : e.length) != null ? o : 0)) {
      const l = e == null ? void 0 : e[t];
      if (l)
        return {
          blocks: l.blocks,
          path: `variants.${t}.blocks`,
          index: t
        };
    }
    return a;
  }
  if (G()) {
    const l = i == null ? void 0 : i[0];
    if (l && e) {
      const c = e.indexOf(l);
      if (c !== -1)
        return {
          blocks: l.blocks,
          path: `variants.${c}.blocks`,
          index: c
        };
    }
  }
  return a;
}
const kn = () => `
  window.${vn} = ${yn}
  window.${et} = ${gn}
  window.${tt} = ${pn}
  `, it = F === "react", Cn = (e, t, n) => `window.${et}(${JSON.stringify(e)}, "${t}", ${it}${n ? `, "${n}"` : ""})`, Tn = (e, t, n) => `window.${tt}(${JSON.stringify(e)}, "${t}", ${it}${n ? `, "${n}"` : ""})`, de = {
  "@type": "@builder.io/sdk:Element",
  layerName: "Accordion item title",
  responsiveStyles: {
    large: {
      marginTop: "10px",
      position: "relative",
      display: "flex",
      alignItems: "stretch",
      flexDirection: "column",
      paddingBottom: "10px"
    }
  },
  children: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        textAlign: "left",
        display: "flex",
        flexDirection: "column"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "I am an accordion title. Click me!"
      }
    }
  }]
}, me = {
  "@type": "@builder.io/sdk:Element",
  layerName: "Accordion item detail",
  responsiveStyles: {
    large: {
      position: "relative",
      display: "flex",
      alignItems: "stretch",
      flexDirection: "column",
      marginTop: "10px",
      paddingBottom: "10px"
    }
  },
  children: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        paddingTop: "50px",
        textAlign: "left",
        display: "flex",
        flexDirection: "column",
        paddingBottom: "50px"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "I am an accordion detail, hello!"
      }
    }
  }]
}, In = {
  name: "Builder:Accordion",
  canHaveChildren: !0,
  image: "https://cdn.builder.io/api/v1/image/assets%2FagZ9n5CUKRfbL9t6CaJOyVSK4Es2%2Ffab6c1fd3fe542408cbdec078bca7f35",
  defaultStyles: {
    display: "flex",
    flexDirection: "column",
    alignItems: "stretch"
  },
  inputs: [{
    name: "items",
    type: "list",
    broadcast: !0,
    subFields: [{
      name: "title",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [de]
    }, {
      name: "detail",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [me]
    }],
    defaultValue: [{
      title: [de],
      detail: [me]
    }, {
      title: [de],
      detail: [me]
    }],
    showIf: (e) => !e.get("useChildrenForItems")
  }, {
    name: "oneAtATime",
    helperText: "Only allow opening one at a time (collapse all others when new item openned)",
    type: "boolean",
    defaultValue: !1
  }, {
    name: "grid",
    helperText: "Display as a grid",
    type: "boolean",
    defaultValue: !1
  }, {
    name: "gridRowWidth",
    helperText: "Display as a grid",
    type: "string",
    showIf: (e) => e.get("grid"),
    defaultValue: "25%"
  }, {
    name: "useChildrenForItems",
    type: "boolean",
    helperText: "Use child elements for each slide, instead of the array. Useful for dynamically repeating items",
    advanced: !0,
    defaultValue: !1,
    onChange: (e) => {
      e.get("useChildrenForItems") === !0 && e.set("items", []);
    }
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, Ae = (e) => e.toString();
function wn(e) {
  var g;
  const [t, n] = k(() => []);
  function i() {
    return !!(e.grid || e.oneAtATime);
  }
  function r() {
    return {
      display: "flex",
      alignItems: "stretch",
      flexDirection: "column",
      ...e.grid && {
        flexDirection: "row",
        alignItems: "flex-start",
        flexWrap: "wrap"
      }
    };
  }
  function a() {
    const x = {
      ...{
        display: "flex",
        flexDirection: "column"
      },
      alignItems: "stretch",
      cursor: "pointer"
    };
    return Object.fromEntries(
      Object.entries(x).filter(([f, m]) => m !== void 0)
    );
  }
  function o(u) {
    return `builder-accordion-title builder-accordion-title-${t.includes(u) ? "open" : "closed"}`;
  }
  function l(u) {
    return `builder-accordion-detail builder-accordion-detail-${t.includes(u) ? "open" : "closed"}`;
  }
  function c() {
    let u = null;
    if (e.grid && t.length && document) {
      const f = t[0];
      let y = document.querySelector(
        `.builder-accordion-title[data-index="${f}"]`
      );
      if (u = f, y) {
        let b = y.getBoundingClientRect();
        for (; y = y && y.nextElementSibling; )
          if (y) {
            if (y.classList.contains("builder-accordion-detail"))
              continue;
            const S = y.getBoundingClientRect();
            if (S.left > b.left) {
              const T = parseInt(
                y.getAttribute("data-index") || "",
                10
              );
              isNaN(T) || (b = S, u = T);
            } else
              break;
          }
      }
    }
    return typeof u == "number" && (u = u + 1), u;
  }
  function d() {
    const u = {
      order: typeof c() == "number" ? c() : void 0,
      ...e.grid && {
        width: "100%"
      }
    };
    return Object.fromEntries(
      Object.entries(u).filter(([x, f]) => f !== void 0)
    );
  }
  function h(u) {
    t.includes(u) ? n(i() ? [] : t.filter((x) => x !== u)) : n(i() ? [u] : t.concat(u));
  }
  return /* @__PURE__ */ s("div", { className: "builder-accordion", style: r(), children: (g = e.items) == null ? void 0 : g.map((u, x) => /* @__PURE__ */ D(mt.Fragment, { children: [
    /* @__PURE__ */ s(
      "div",
      {
        className: o(x),
        style: {
          ...a(),
          ...e.grid && {
            width: e.gridRowWidth,
            order: c() !== null ? Ae(x) : Ae(x + 1)
          }
        },
        "data-index": x,
        onClick: (f) => h(x),
        children: /* @__PURE__ */ s(
          M,
          {
            blocks: u.title,
            path: `items.${x}.title`,
            parent: e.builderBlock.id,
            context: e.builderContext,
            registeredComponents: e.builderComponents,
            linkComponent: e.builderLinkComponent
          }
        )
      }
    ),
    t.includes(x) ? /* @__PURE__ */ s(
      "div",
      {
        className: l(x),
        style: d(),
        children: /* @__PURE__ */ s(
          M,
          {
            blocks: u.detail,
            path: `items.${x}.detail`,
            parent: e.builderBlock.id,
            context: e.builderContext,
            registeredComponents: e.builderComponents,
            linkComponent: e.builderLinkComponent
          }
        )
      }
    ) : null
  ] }, x)) });
}
const En = {
  name: "Core:Button",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F81a15681c3e74df09677dfc57a615b13",
  defaultStyles: {
    // TODO: make min width more intuitive and set one
    appearance: "none",
    paddingTop: "15px",
    paddingBottom: "15px",
    paddingLeft: "25px",
    paddingRight: "25px",
    backgroundColor: "#000000",
    color: "white",
    borderRadius: "4px",
    textAlign: "center",
    cursor: "pointer"
  },
  inputs: [{
    name: "text",
    type: "text",
    defaultValue: "Click me!",
    bubble: !0
  }, {
    name: "link",
    type: "url",
    bubble: !0
  }, {
    name: "openLinkInNewTab",
    type: "boolean",
    defaultValue: !1,
    friendlyName: "Open link in new tab"
  }],
  static: !0,
  noWrap: !0,
  shouldReceiveBuilderProps: {
    builderLinkComponent: !0
  }
}, Rn = {
  // TODO: ways to statically preprocess JSON for references, functions, etc
  name: "Columns",
  isRSC: !0,
  inputs: [{
    name: "columns",
    type: "array",
    broadcast: !0,
    subFields: [{
      name: "blocks",
      type: "array",
      hideFromUI: !0,
      defaultValue: [{
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto",
            minHeight: "20px",
            minWidth: "20px",
            overflow: "hidden"
          }
        },
        component: {
          name: "Image",
          options: {
            image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d",
            backgroundPosition: "center",
            backgroundSize: "cover",
            aspectRatio: 0.7004048582995948
          }
        }
      }, {
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto"
          }
        },
        component: {
          name: "Text",
          options: {
            text: "<p>Enter some text...</p>"
          }
        }
      }]
    }, {
      name: "width",
      type: "number",
      hideFromUI: !0,
      helperText: "Width %, e.g. set to 50 to fill half of the space"
    }, {
      name: "link",
      type: "url",
      helperText: "Optionally set a url that clicking this column will link to"
    }],
    defaultValue: [{
      blocks: [{
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto",
            minHeight: "20px",
            minWidth: "20px",
            overflow: "hidden"
          }
        },
        component: {
          name: "Image",
          options: {
            image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d",
            backgroundPosition: "center",
            backgroundSize: "cover",
            aspectRatio: 0.7004048582995948
          }
        }
      }, {
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto"
          }
        },
        component: {
          name: "Text",
          options: {
            text: "<p>Enter some text...</p>"
          }
        }
      }]
    }, {
      blocks: [{
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto",
            minHeight: "20px",
            minWidth: "20px",
            overflow: "hidden"
          }
        },
        component: {
          name: "Image",
          options: {
            image: "https://builder.io/api/v1/image/assets%2Fpwgjf0RoYWbdnJSbpBAjXNRMe9F2%2Ffb27a7c790324294af8be1c35fe30f4d",
            backgroundPosition: "center",
            backgroundSize: "cover",
            aspectRatio: 0.7004048582995948
          }
        }
      }, {
        "@type": "@builder.io/sdk:Element",
        responsiveStyles: {
          large: {
            display: "flex",
            flexDirection: "column",
            alignItems: "stretch",
            flexShrink: "0",
            position: "relative",
            marginTop: "30px",
            textAlign: "center",
            lineHeight: "normal",
            height: "auto"
          }
        },
        component: {
          name: "Text",
          options: {
            text: "<p>Enter some text...</p>"
          }
        }
      }]
    }],
    onChange: (e) => {
      function t() {
        n.forEach((i) => {
          i.delete("width");
        });
      }
      const n = e.get("columns");
      Array.isArray(n) && n.find((r) => r.get("width")) && (n.find((a) => !a.get("width")) || n.reduce((l, c) => l + c.get("width"), 0) !== 100) && t();
    }
  }, {
    name: "space",
    type: "number",
    defaultValue: 20,
    helperText: "Size of gap between columns",
    advanced: !0
  }, {
    name: "stackColumnsAt",
    type: "string",
    defaultValue: "tablet",
    helperText: "Convert horizontal columns to vertical at what device size",
    enum: ["tablet", "mobile", "never"],
    advanced: !0
  }, {
    name: "reverseColumnsWhenStacked",
    type: "boolean",
    defaultValue: !1,
    helperText: "When stacking columns for mobile devices, reverse the ordering",
    advanced: !0
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, Pn = {
  name: "Fragment",
  static: !0,
  hidden: !0,
  canHaveChildren: !0,
  noWrap: !0
}, Se = ["jpeg", "jpg", "png", "svg", "webp", "gif", "jfif", "pjpeg", "pjp", "apng", "avif", "tif", "tiff", "heif", "bmp", "eps", "raw", "cr2", "nef", "orf", "sr2", "psd", "heic", "dib", "ai"], Vn = ["mp4", "webm", "mkv", "flv", "vob", "ogv", "ogg", "drc", "gif", "gifv", "mng", "avi", "mov", "qt", "mts", "m2ts", "ts", "wmv", "yuv", "rm", "rmvb", "viv", "asf", "amv", "m4p", "mpeg", "mpe", "m2v", "m4v", "svi", "3gp", "3g2", "mxf", "roq", "nsv", "f4v", "f4p", "f4a", "f4b"], An = {
  name: "Image",
  static: !0,
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4",
  defaultStyles: {
    position: "relative",
    minHeight: "20px",
    minWidth: "20px",
    overflow: "hidden"
  },
  canHaveChildren: !0,
  inputs: [{
    name: "image",
    type: "file",
    bubble: !0,
    allowedFileTypes: Se,
    required: !0,
    defaultValue: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F72c80f114dc149019051b6852a9e3b7a",
    onChange: (e) => {
      e.delete("srcset"), e.delete("noWebp");
      function n(o, l = 6e4) {
        return new Promise((c, d) => {
          const h = document.createElement("img");
          let g = !1;
          h.onload = () => {
            g = !0, c(h);
          }, h.addEventListener("error", (u) => {
            console.warn("Image load failed", u.error), d(u.error);
          }), h.src = o, setTimeout(() => {
            g || d(new Error("Image load timed out"));
          }, l);
        });
      }
      function i(o) {
        return Math.round(o * 1e3) / 1e3;
      }
      const r = e.get("image"), a = e.get("aspectRatio");
      if (fetch(r).then((o) => o.blob()).then((o) => {
        o.type.includes("svg") && e.set("noWebp", !0);
      }), r && (!a || a === 0.7041))
        return n(r).then((o) => {
          const l = e.get("aspectRatio");
          e.get("image") === r && (!l || l === 0.7041) && o.width && o.height && (e.set("aspectRatio", i(o.height / o.width)), e.set("height", o.height), e.set("width", o.width));
        });
    }
  }, {
    name: "backgroundSize",
    type: "text",
    defaultValue: "cover",
    enum: [{
      label: "contain",
      value: "contain",
      helperText: "The image should never get cropped"
    }, {
      label: "cover",
      value: "cover",
      helperText: "The image should fill it's box, cropping when needed"
    }]
  }, {
    name: "backgroundPosition",
    type: "text",
    defaultValue: "center",
    enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"]
  }, {
    name: "altText",
    type: "string",
    helperText: "Text to display when the user has images off"
  }, {
    name: "title",
    type: "string",
    helperText: "Text to display when hovering over the asset"
  }, {
    name: "height",
    type: "number",
    hideFromUI: !0
  }, {
    name: "width",
    type: "number",
    hideFromUI: !0
  }, {
    name: "sizes",
    type: "string",
    hideFromUI: !0
  }, {
    name: "srcset",
    type: "string",
    hideFromUI: !0
  }, {
    name: "lazy",
    type: "boolean",
    defaultValue: !0,
    hideFromUI: !0
  }, {
    name: "fitContent",
    type: "boolean",
    helperText: "When child blocks are provided, fit to them instead of using the image's aspect ratio",
    defaultValue: !0
  }, {
    name: "highPriority",
    type: "boolean",
    advanced: !0,
    helperText: "Mark this image as high priority compared to other images on the page. This prevents lazy loading of the image and tells the browser to load this image before others on the page."
  }, {
    name: "aspectRatio",
    type: "number",
    helperText: "This is the ratio of height/width, e.g. set to 1.5 for a 300px wide and 200px tall photo. Set to 0 to not force the image to maintain it's aspect ratio",
    advanced: !0,
    defaultValue: 0.7041
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0
  }
}, Bn = {
  name: "PersonalizationContainer",
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0
  },
  noWrap: !0,
  image: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F37229ed30d8c41dfb10b8cca1992053a",
  canHaveChildren: !0,
  inputs: [{
    name: "variants",
    defaultValue: [],
    behavior: "personalizationVariantList",
    type: "list",
    subFields: [{
      name: "name",
      type: "text"
    }, {
      name: "query",
      friendlyName: "Targeting rules",
      type: "BuilderQuery",
      defaultValue: []
    }, {
      name: "startDate",
      type: "date"
    }, {
      name: "endDate",
      type: "date"
    }, {
      name: "blocks",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: []
    }]
  }]
};
function K(e) {
  return /* @__PURE__ */ s(
    "script",
    {
      dangerouslySetInnerHTML: { __html: e.scriptStr },
      "data-id": e.id,
      nonce: e.nonce || ""
    }
  );
}
function Nn(e) {
  var S, T, E, _, H, q, p, v, I, V, $, R, A;
  const t = z(null), [n, i] = k(
    () => Ce.getUserAttributes()
  ), [r, a] = k(
    () => {
      var w, B, C;
      return Cn(
        e.variants,
        ((w = e.builderBlock) == null ? void 0 : w.id) || "none",
        (C = (B = e.builderContext) == null ? void 0 : B.rootState) == null ? void 0 : C.locale
      );
    }
  ), [o, l] = k(
    () => {
      var w, B, C;
      return Tn(
        e.variants,
        ((w = e.builderBlock) == null ? void 0 : w.id) || "none",
        (C = (B = e.builderContext) == null ? void 0 : B.rootState) == null ? void 0 : C.locale
      );
    }
  ), [c, d] = k(() => []), [h, g] = k(
    () => {
      var w;
      return xn(
        e.variants,
        Z((w = e.builderContext) == null ? void 0 : w.canTrack)
      );
    }
  ), [u, x] = k(() => !1);
  function f() {
    return {
      ...e.attributes,
      [J()]: `builder-personalization-container ${e.attributes[J()] || ""}`
    };
  }
  function m() {
    return (e.variants || []).filter((w) => {
      var B, C, W, L;
      return bn(
        {
          ...(C = (B = e.builderContext) == null ? void 0 : B.rootState) != null && C.locale ? {
            locale: (L = (W = e.builderContext) == null ? void 0 : W.rootState) == null ? void 0 : L.locale
          } : {},
          ...n
        },
        w.query,
        w.startDate,
        w.endDate
      );
    });
  }
  function y() {
    var w;
    return Sn({
      variants: e.variants,
      fallbackBlocks: (w = e.builderBlock) == null ? void 0 : w.children,
      isHydrated: u,
      filteredVariants: m(),
      previewingIndex: e.previewingIndex
    });
  }
  function b() {
    return (e.variants || []).map(
      (w, B) => {
        var C;
        return `div[data-variant-id="${(C = e.builderBlock) == null ? void 0 : C.id}-${B}"] { display: none !important; } `;
      }
    ).join("");
  }
  return N(() => {
    var B;
    x(!0);
    const w = Ce.subscribeOnUserAttributesChange(
      (C) => {
        i(C);
      },
      {
        fireImmediately: F === "qwik"
      }
    );
    if (!(U() || le())) {
      const C = m()[0];
      t.current && (t.current.dispatchEvent(
        new CustomEvent("builder.variantLoaded", {
          detail: {
            variant: C || ie,
            content: (B = e.builderContext) == null ? void 0 : B.content
          },
          bubbles: !0
        })
      ), new IntersectionObserver((L) => {
        L.forEach((O) => {
          var j;
          O.isIntersecting && t.current && t.current.dispatchEvent(
            new CustomEvent("builder.variantDisplayed", {
              detail: {
                variant: C || ie,
                content: (j = e.builderContext) == null ? void 0 : j.content
              },
              bubbles: !0
            })
          );
        });
      }).observe(t.current));
    }
    c.push(w);
  }, []), N(() => () => {
    c.forEach((w) => w());
  }, []), /* @__PURE__ */ D("div", { ref: t, ...f(), children: [
    u && re.includes(F) ? /* @__PURE__ */ s(
      M,
      {
        blocks: y().blocks,
        parent: (S = e.builderBlock) == null ? void 0 : S.id,
        path: y().path,
        context: e.builderContext,
        registeredComponents: e.builderComponents,
        BlocksWrapperProps: {
          ...(T = e.builderContext) == null ? void 0 : T.BlocksWrapperProps,
          "data-variant-id": `${(E = e.builderBlock) == null ? void 0 : E.id}-${y().index}`
        }
      }
    ) : null,
    !u && re.includes(F) || !re.includes(F) ? /* @__PURE__ */ D(P, { children: [
      h ? /* @__PURE__ */ D(P, { children: [
        /* @__PURE__ */ s(
          te,
          {
            nonce: ((_ = e.builderContext) == null ? void 0 : _.nonce) || "",
            styles: b(),
            id: `variants-styles-${(H = e.builderBlock) == null ? void 0 : H.id}`
          }
        ),
        /* @__PURE__ */ s(
          K,
          {
            nonce: ((q = e.builderContext) == null ? void 0 : q.nonce) || "",
            scriptStr: o,
            id: `variants-visibility-script-${(p = e.builderBlock) == null ? void 0 : p.id}`
          }
        ),
        (v = e.variants) == null ? void 0 : v.map((w, B) => {
          var C, W, L, O, j, ke;
          return /* @__PURE__ */ s(
            M,
            {
              BlocksWrapperProps: {
                ...(C = e.builderContext) == null ? void 0 : C.BlocksWrapperProps,
                "aria-hidden": !0,
                hidden: !0,
                "data-variant-id": `${(W = e.builderBlock) == null ? void 0 : W.id}-${B}`
              },
              blocks: w.blocks,
              parent: (L = e.builderBlock) == null ? void 0 : L.id,
              path: `component.options.variants.${B}.blocks`,
              context: e.builderContext,
              registeredComponents: e.builderComponents,
              children: /* @__PURE__ */ s(
                K,
                {
                  nonce: ((O = e.builderContext) == null ? void 0 : O.nonce) || "",
                  scriptStr: r,
                  id: `variants-script-${(j = e.builderBlock) == null ? void 0 : j.id}-${B}`
                }
              )
            },
            `${(ke = e.builderBlock) == null ? void 0 : ke.id}-${B}`
          );
        })
      ] }) : null,
      /* @__PURE__ */ s(
        M,
        {
          blocks: y().blocks,
          parent: (I = e.builderBlock) == null ? void 0 : I.id,
          path: y().path,
          context: e.builderContext,
          registeredComponents: e.builderComponents,
          BlocksWrapperProps: {
            ...(V = e.builderContext) == null ? void 0 : V.BlocksWrapperProps,
            "data-variant-id": `${($ = e.builderBlock) == null ? void 0 : $.id}-${y().index}`
          },
          children: h ? /* @__PURE__ */ s(
            K,
            {
              nonce: ((R = e.builderContext) == null ? void 0 : R.nonce) || "",
              scriptStr: r,
              id: `variants-script-${(A = e.builderBlock) == null ? void 0 : A.id}-${ie}`
            }
          ) : null
        }
      )
    ] }) : null
  ] });
}
const $n = {
  name: "Core:Section",
  static: !0,
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F682efef23ace49afac61748dd305c70a",
  inputs: [{
    name: "maxWidth",
    type: "number",
    defaultValue: 1200
  }, {
    name: "lazyLoad",
    type: "boolean",
    defaultValue: !1,
    advanced: !0,
    description: "Only render this section when in view"
  }],
  defaultStyles: {
    paddingLeft: "20px",
    paddingRight: "20px",
    paddingTop: "50px",
    paddingBottom: "50px",
    marginTop: "0px",
    width: "100vw",
    marginLeft: "calc(50% - 50vw)"
  },
  canHaveChildren: !0,
  defaultChildren: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        textAlign: "center"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "<p><b>I am a section! My content keeps from getting too wide, so that it's easy to read even on big screens.</b></p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</p>"
      }
    }
  }]
}, Wn = {
  name: "Slot",
  isRSC: !0,
  description: "Allow child blocks to be inserted into this content when used as a Symbol",
  docsLink: "https://www.builder.io/c/docs/symbols-with-blocks",
  image: "https://cdn.builder.io/api/v1/image/assets%2FYJIGb4i01jvw0SRdL5Bt%2F3aad6de36eae43b59b52c85190fdef56",
  // Maybe wrap this for canHaveChildren so bind children to this hm
  inputs: [{
    name: "name",
    type: "string",
    required: !0,
    defaultValue: "children"
  }],
  shouldReceiveBuilderProps: {
    builderContext: !0,
    builderComponents: !0
  }
};
function Dn(e) {
  var t, n, i;
  return /* @__PURE__ */ s(
    "div",
    {
      style: {
        pointerEvents: "auto"
      },
      ...!((t = e.builderContext.context) != null && t.symbolId) && {
        "builder-slot": e.name
      },
      children: /* @__PURE__ */ s(
        M,
        {
          parent: (n = e.builderContext.context) == null ? void 0 : n.symbolId,
          path: `symbol.data.${e.name}`,
          context: e.builderContext,
          registeredComponents: e.builderComponents,
          blocks: (i = e.builderContext.rootState) == null ? void 0 : i[e.name]
        }
      )
    }
  );
}
const Fn = {
  name: "Symbol",
  noWrap: !0,
  static: !0,
  isRSC: !0,
  inputs: [{
    name: "symbol",
    type: "uiSymbol"
  }, {
    name: "dataOnly",
    helperText: "Make this a data symbol that doesn't display any UI",
    type: "boolean",
    defaultValue: !1,
    advanced: !0,
    hideFromUI: !0
  }, {
    name: "inheritState",
    helperText: "Inherit the parent component state and data",
    type: "boolean",
    defaultValue: !1,
    advanced: !0
  }, {
    name: "renderToLiquid",
    helperText: "Render this symbols contents to liquid. Turn off to fetch with javascript and use custom targeting",
    type: "boolean",
    defaultValue: !1,
    advanced: !0,
    hideFromUI: !0
  }, {
    name: "useChildren",
    hideFromUI: !0,
    type: "boolean"
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, fe = {
  "@type": "@builder.io/sdk:Element",
  responsiveStyles: {
    large: {
      paddingLeft: "20px",
      paddingRight: "20px",
      paddingTop: "10px",
      paddingBottom: "10px",
      minWidth: "100px",
      textAlign: "center",
      display: "flex",
      flexDirection: "column",
      cursor: "pointer",
      userSelect: "none"
    }
  },
  component: {
    name: "Text",
    options: {
      text: "New tab"
    }
  }
}, he = {
  "@type": "@builder.io/sdk:Element",
  responsiveStyles: {
    large: {
      height: "200px",
      display: "flex",
      marginTop: "20px",
      flexDirection: "column"
    }
  },
  component: {
    name: "Text",
    options: {
      text: "New tab content "
    }
  }
}, Ln = {
  name: "Builder: Tabs",
  inputs: [{
    name: "tabs",
    type: "list",
    broadcast: !0,
    subFields: [{
      name: "label",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [fe]
    }, {
      name: "content",
      type: "uiBlocks",
      hideFromUI: !0,
      defaultValue: [he]
    }],
    defaultValue: [{
      label: [{
        ...fe,
        component: {
          name: "Text",
          options: {
            text: "Tab 1"
          }
        }
      }],
      content: [{
        ...he,
        component: {
          name: "Text",
          options: {
            text: "Tab 1 content"
          }
        }
      }]
    }, {
      label: [{
        ...fe,
        component: {
          name: "Text",
          options: {
            text: "Tab 2"
          }
        }
      }],
      content: [{
        ...he,
        component: {
          name: "Text",
          options: {
            text: "Tab 2 content"
          }
        }
      }]
    }]
  }, {
    name: "activeTabStyle",
    type: "uiStyle",
    helperText: "CSS styles for the active tab",
    defaultValue: {
      backgroundColor: "rgba(0, 0, 0, 0.1)"
    }
  }, {
    name: "defaultActiveTab",
    type: "number",
    helperText: 'Default tab to open to. Set to "1" for the first tab, "2" for the second, or choose "0" for none',
    defaultValue: 1,
    advanced: !0
  }, {
    name: "collapsible",
    type: "boolean",
    helperText: "If on, clicking an open tab closes it so no tabs are active",
    defaultValue: !1,
    advanced: !0
  }, {
    name: "tabHeaderLayout",
    type: "enum",
    helperText: "Change the layout of the tab headers (uses justify-content)",
    defaultValue: "flex-start",
    enum: [{
      label: "Center",
      value: "center"
    }, {
      label: "Space between",
      value: "space-between"
    }, {
      label: "Space around",
      value: "space-around"
    }, {
      label: "Left",
      value: "flex-start"
    }, {
      label: "Right",
      value: "flex-end"
    }]
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
};
function On(e) {
  var o;
  const [t, n] = k(
    () => e.defaultActiveTab ? e.defaultActiveTab - 1 : 0
  );
  function i(l) {
    return e.tabs && e.tabs[l].content;
  }
  function r(l) {
    return l === t ? e.activeTabStyle : {};
  }
  function a(l) {
    l === t && e.collapsible ? n(-1) : n(l);
  }
  return /* @__PURE__ */ D("div", { children: [
    /* @__PURE__ */ s(
      "div",
      {
        className: "builder-tabs-wrap",
        style: {
          display: "flex",
          flexDirection: "row",
          justifyContent: e.tabHeaderLayout || "flex-start",
          overflow: "auto"
        },
        children: (o = e.tabs) == null ? void 0 : o.map((l, c) => /* @__PURE__ */ s(
          "span",
          {
            className: `builder-tab-wrap ${t === c ? "builder-tab-active" : ""}`,
            style: r(c),
            onClick: (d) => a(c),
            children: /* @__PURE__ */ s(
              M,
              {
                parent: e.builderBlock.id,
                path: `tabs.${c}.label`,
                blocks: l.label,
                context: e.builderContext,
                registeredComponents: e.builderComponents,
                linkComponent: e.builderLinkComponent
              }
            )
          },
          c
        ))
      }
    ),
    i(t) ? /* @__PURE__ */ s("div", { children: /* @__PURE__ */ s(
      M,
      {
        parent: e.builderBlock.id,
        path: `tabs.${t}.content`,
        blocks: i(t),
        context: e.builderContext,
        registeredComponents: e.builderComponents,
        linkComponent: e.builderLinkComponent
      }
    ) }) : null
  ] });
}
const _n = {
  shouldReceiveBuilderProps: {},
  name: "Text",
  static: !0,
  isRSC: !0,
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-text_fields-24px%20(1).svg?alt=media&token=12177b73-0ee3-42ca-98c6-0dd003de1929",
  inputs: [{
    name: "text",
    type: "html",
    required: !0,
    autoFocus: !0,
    bubble: !0,
    defaultValue: "Enter some text..."
  }],
  defaultStyles: {
    lineHeight: "normal",
    height: "auto",
    textAlign: "center"
  }
};
function Un(e) {
  var t;
  return /* @__PURE__ */ s(
    "div",
    {
      className: "builder-text",
      dangerouslySetInnerHTML: { __html: ((t = e.text) == null ? void 0 : t.toString()) || "" },
      style: {
        outline: "none"
      }
    }
  );
}
const Hn = {
  name: "Custom Code",
  static: !0,
  requiredPermissions: ["editCode"],
  inputs: [{
    name: "code",
    type: "html",
    required: !0,
    defaultValue: "<p>Hello there, I am custom HTML code!</p>",
    code: !0
  }, {
    name: "replaceNodes",
    type: "boolean",
    helperText: "Preserve server rendered dom nodes",
    advanced: !0
  }, {
    name: "scriptsClientOnly",
    type: "boolean",
    defaultValue: !1,
    helperText: "Only print and run scripts on the client. Important when scripts influence DOM that could be replaced when client loads",
    advanced: !0
  }]
};
function Mn(e) {
  const t = z(null), [n, i] = k(() => []), [r, a] = k(() => []);
  function o() {
    var c;
    if (!t.current || !((c = t.current) != null && c.getElementsByTagName) || typeof window == "undefined")
      return;
    const l = t.current.getElementsByTagName("script");
    for (let d = 0; d < l.length; d++) {
      const h = l[d];
      if (h.src) {
        if (n.includes(h.src))
          continue;
        n.push(h.src);
        const g = document.createElement("script");
        g.async = !0, g.src = h.src, document.head.appendChild(g);
      } else if (!h.type || [
        "text/javascript",
        "application/javascript",
        "application/ecmascript"
      ].includes(h.type)) {
        if (r.includes(h.innerText))
          continue;
        try {
          r.push(h.innerText), new Function(h.innerText)();
        } catch (g) {
          ee.warn(
            "[BUILDER.IO] `CustomCode`: Error running script:",
            g
          );
        }
      }
    }
  }
  return N(() => {
    o();
  }, []), N(() => {
    U() && o();
  }, [e.code]), /* @__PURE__ */ s(
    "div",
    {
      ref: t,
      className: "builder-custom-code" + (e.replaceNodes ? " replace-nodes" : ""),
      dangerouslySetInnerHTML: { __html: e.code }
    }
  );
}
const qn = {
  name: "Embed",
  static: !0,
  inputs: [{
    name: "url",
    type: "url",
    required: !0,
    defaultValue: "",
    helperText: "e.g. enter a youtube url, google map, etc"
  }, {
    name: "content",
    type: "html",
    defaultValue: '<div style="padding: 20px; text-align: center">(Choose an embed URL)<div>',
    hideFromUI: !0
  }]
}, jn = ["text/javascript", "application/javascript", "application/ecmascript"], zn = (e) => jn.includes(e.type);
function Kn(e) {
  const t = z(null), [n, i] = k(() => []), [r, a] = k(() => []), [o, l] = k(() => !1);
  function c() {
    if (!t.current || !t.current.getElementsByTagName)
      return;
    const d = t.current.getElementsByTagName("script");
    for (let h = 0; h < d.length; h++) {
      const g = d[h];
      if (g.src && !n.includes(g.src)) {
        n.push(g.src);
        const u = document.createElement("script");
        u.async = !0, u.src = g.src, document.head.appendChild(u);
      } else if (zn(g) && !r.includes(g.innerText))
        try {
          r.push(g.innerText), new Function(g.innerText)();
        } catch (u) {
          ee.warn("[BUILDER.IO] `Embed`: Error running script:", u);
        }
    }
  }
  return N(() => {
    t.current && !o && (l(!0), c());
  }, [t.current, o]), /* @__PURE__ */ s(
    "div",
    {
      className: "builder-embed",
      ref: t,
      dangerouslySetInnerHTML: { __html: e.content }
    }
  );
}
const Jn = {
  name: "Form:Form",
  // editableTags: ['builder-form-error']
  defaults: {
    responsiveStyles: {
      large: {
        marginTop: "15px",
        paddingBottom: "15px"
      }
    }
  },
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fef36d2a846134910b64b88e6d18c5ca5",
  inputs: [{
    name: "sendSubmissionsTo",
    type: "string",
    // TODO: save to builder data and user can download as csv
    // TODO: easy for mode too or computed add/remove fields form mode
    // so you can edit details and high level mode at same time...
    // Later - more integrations like mailchimp
    // /api/v1/form-submit?to=mailchimp
    enum: [{
      label: "Send to email",
      value: "email",
      helperText: "Send form submissions to the email address of your choosing"
    }, {
      label: "Custom",
      value: "custom",
      helperText: "Handle where the form requests go manually with a little code, e.g. to your own custom backend"
    }],
    defaultValue: "email"
  }, {
    name: "sendSubmissionsToEmail",
    type: "string",
    required: !0,
    // TODO: required: () => options.get("sendSubmissionsTo") === "email"
    defaultValue: "your@email.com",
    showIf: 'options.get("sendSubmissionsTo") === "email"'
  }, {
    name: "sendWithJs",
    type: "boolean",
    helperText: "Set to false to use basic html form action",
    defaultValue: !0,
    showIf: 'options.get("sendSubmissionsTo") === "custom"'
  }, {
    name: "name",
    type: "string",
    defaultValue: "My form"
    // advanced: true
  }, {
    name: "action",
    type: "string",
    helperText: "URL to send the form data to",
    showIf: 'options.get("sendSubmissionsTo") === "custom"'
  }, {
    name: "contentType",
    type: "string",
    defaultValue: "application/json",
    advanced: !0,
    // TODO: do automatically if file input
    enum: ["application/json", "multipart/form-data", "application/x-www-form-urlencoded"],
    showIf: 'options.get("sendSubmissionsTo") === "custom" && options.get("sendWithJs") === true'
  }, {
    name: "method",
    type: "string",
    showIf: 'options.get("sendSubmissionsTo") === "custom"',
    defaultValue: "POST",
    advanced: !0
  }, {
    name: "previewState",
    type: "string",
    // TODO: persist: false flag
    enum: ["unsubmitted", "sending", "success", "error"],
    defaultValue: "unsubmitted",
    helperText: 'Choose a state to edit, e.g. choose "success" to show what users see on success and edit the message',
    showIf: 'options.get("sendSubmissionsTo") !== "zapier" && options.get("sendWithJs") === true'
  }, {
    name: "successUrl",
    type: "url",
    helperText: "Optional URL to redirect the user to on form submission success",
    showIf: 'options.get("sendSubmissionsTo") !== "zapier" && options.get("sendWithJs") === true'
  }, {
    name: "resetFormOnSubmit",
    type: "boolean",
    showIf: "options.get('sendSubmissionsTo') === 'custom' && options.get('sendWithJs') === true",
    advanced: !0
  }, {
    name: "successMessage",
    type: "uiBlocks",
    hideFromUI: !0,
    defaultValue: [{
      "@type": "@builder.io/sdk:Element",
      responsiveStyles: {
        large: {
          marginTop: "10px"
        }
      },
      component: {
        name: "Text",
        options: {
          text: "<span>Thanks!</span>"
        }
      }
    }]
  }, {
    name: "validate",
    type: "boolean",
    defaultValue: !0,
    advanced: !0
  }, {
    name: "errorMessagePath",
    type: "text",
    advanced: !0,
    helperText: 'Path to where to get the error message from in a JSON response to display to the user, e.g. "error.message" for a response like { "error": { "message": "this username is taken" }}'
  }, {
    name: "errorMessage",
    type: "uiBlocks",
    hideFromUI: !0,
    defaultValue: [{
      "@type": "@builder.io/sdk:Element",
      responsiveStyles: {
        large: {
          marginTop: "10px"
        }
      },
      bindings: {
        "component.options.text": "state.formErrorMessage || block.component.options.text"
      },
      component: {
        name: "Text",
        options: {
          text: "<span>Form submission error :( Please check your answers and try again</span>"
        }
      }
    }]
  }, {
    name: "sendingMessage",
    type: "uiBlocks",
    hideFromUI: !0,
    defaultValue: [{
      "@type": "@builder.io/sdk:Element",
      responsiveStyles: {
        large: {
          marginTop: "10px"
        }
      },
      component: {
        name: "Text",
        options: {
          text: "<span>Sending...</span>"
        }
      }
    }]
  }, {
    name: "customHeaders",
    type: "map",
    valueType: {
      type: "string"
    },
    advanced: !0,
    showIf: 'options.get("sendSubmissionsTo") === "custom" && options.get("sendWithJs") === true'
  }],
  noWrap: !0,
  canHaveChildren: !0,
  defaultChildren: [{
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "<span>Enter your name</span>"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Form:Input",
      options: {
        name: "name",
        placeholder: "Jane Doe"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Text",
      options: {
        text: "<span>Enter your email</span>"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Form:Input",
      options: {
        name: "email",
        placeholder: "jane@doe.com"
      }
    }
  }, {
    "@type": "@builder.io/sdk:Element",
    responsiveStyles: {
      large: {
        marginTop: "10px"
      }
    },
    component: {
      name: "Form:SubmitButton",
      options: {
        text: "Submit"
      }
    }
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0,
    builderContext: !0,
    builderComponents: !0,
    builderLinkComponent: !0
  }
}, Gn = ["production", "qa", "test", "development", "dev", "cdn-qa", "cloud", "fast", "cdn2", "cdn-prod"], Qn = () => {
  const e = process.env.NODE_ENV || "production";
  return Gn.includes(e) ? e : "production";
};
function Yn(e) {
  const t = z(null), [n, i] = k(() => "unsubmitted"), [r, a] = k(() => null), [o, l] = k(() => "");
  function c(u) {
    var f, m;
    const x = {
      ...e.builderContext.rootState,
      ...u
    };
    e.builderContext.rootSetState ? (m = (f = e.builderContext).rootSetState) == null || m.call(f, x) : e.builderContext.rootState = x;
  }
  function d() {
    return U() && e.previewState || n;
  }
  function h(u) {
    return JSON.stringify(u, null, 2);
  }
  function g(u) {
    var f;
    const x = e.sendWithJs || e.sendSubmissionsTo === "email";
    if (e.sendSubmissionsTo === "zapier")
      u.preventDefault();
    else if (x) {
      if (!(e.action || e.sendSubmissionsTo === "email")) {
        u.preventDefault();
        return;
      }
      u.preventDefault();
      const m = u.currentTarget || u.target, y = e.customHeaders || {};
      let b;
      const S = new FormData(m), T = Array.from(m.querySelectorAll("input,select,textarea")).filter((p) => !!p.name).filter(
        (p) => !!p.name && (p.type !== "radio" || p.checked)
      ).map((p) => {
        let v;
        const I = p.name;
        if (p instanceof HTMLInputElement)
          if (p.type === "radio") {
            if (p.checked)
              return v = p.value, {
                key: I,
                value: v
              };
          } else if (p.type === "checkbox")
            v = p.checked;
          else if (p.type === "number" || p.type === "range") {
            const V = p.valueAsNumber;
            isNaN(V) || (v = V);
          } else
            p.type === "file" ? v = p.files : v = p.value;
        else
          v = p.value;
        return {
          key: I,
          value: v
        };
      });
      let E = e.contentType;
      if (e.sendSubmissionsTo === "email" && (E = "multipart/form-data"), Array.from(T).forEach(({ value: p }) => {
        (p instanceof File || Array.isArray(p) && p[0] instanceof File || p instanceof FileList) && (E = "multipart/form-data");
      }), E !== "application/json")
        b = S;
      else {
        const p = {};
        Array.from(T).forEach(({ value: v, key: I }) => {
          Ue(p, I, v);
        }), b = JSON.stringify(p);
      }
      E && E !== "multipart/form-data" && (x && ((f = e.action) != null && f.includes("zapier.com")) || (y["content-type"] = E));
      const _ = new CustomEvent("presubmit", { detail: { body: b } });
      if (t.current && (t.current.dispatchEvent(_), _.defaultPrevented))
        return;
      if (i("sending"), e.sendSubmissionsTo === "email" && (e.sendSubmissionsToEmail === "your@email.com" || !e.sendSubmissionsToEmail)) {
        const p = "SubmissionsToEmail is required when sendSubmissionsTo is set to email";
        console.error(p), i("error"), c({ formErrorMessage: p });
        return;
      }
      const H = `${Qn() === "dev" ? "http://localhost:5000" : "https://builder.io"}/api/v1/form-submit?apiKey=${e.builderContext.apiKey}&to=${btoa(
        e.sendSubmissionsToEmail || ""
      )}&name=${encodeURIComponent(e.name || "")}`, q = e.sendSubmissionsTo === "email" ? H : e.action;
      Fe(q), fetch(q, { body: b, headers: y, method: e.method || "post" }).then(
        async (p) => {
          var V, $;
          let v;
          const I = p.headers.get("content-type");
          if (I && I.indexOf("application/json") !== -1 ? v = await p.json() : v = await p.text(), !p.ok) {
            const R = new CustomEvent("submit:error", {
              detail: { error: v, status: p.status }
            });
            if ((V = t.current) != null && V.nativeElement && (($ = t.current) == null || $.nativeElement.dispatchEvent(R), R.defaultPrevented))
              return;
            a(v), i("error");
            let A = e.errorMessagePath ? Me(v, e.errorMessagePath) : v.message || v.error || v;
            typeof A != "string" && (A = JSON.stringify(A)), l(A), c({ formErrorMessage: A });
            return;
          }
          if (a(v), i(p.ok ? "success" : "error"), p.ok) {
            const R = new CustomEvent("submit:success", {
              detail: { res: p, body: v }
            });
            if (t.current) {
              if (t.current.dispatchEvent(R), R.defaultPrevented)
                return;
              e.resetFormOnSubmit !== !1 && t.current.reset();
            }
            if (e.successUrl)
              if (t.current) {
                const A = new CustomEvent("route", {
                  detail: { url: e.successUrl }
                });
                t.current.dispatchEvent(A), A.defaultPrevented || (location.href = e.successUrl);
              } else
                location.href = e.successUrl;
          }
        },
        (p) => {
          const v = new CustomEvent("submit:error", {
            detail: { error: p }
          });
          t.current && (t.current.dispatchEvent(v), v.defaultPrevented) || (a(p), i("error"));
        }
      );
    }
  }
  return /* @__PURE__ */ D(P, { children: [
    " ",
    /* @__PURE__ */ s("style", { children: ".pre-abc898ba {   padding: 10px;   color: red;   text-align: center; }" }),
    " ",
    /* @__PURE__ */ D(
      "form",
      {
        validate: e.validate,
        ref: t,
        action: !e.sendWithJs && e.action,
        method: e.method,
        name: e.name,
        onSubmit: (u) => g(u),
        ...e.attributes,
        children: [
          e.children,
          d() === "error" ? /* @__PURE__ */ s(
            M,
            {
              path: "errorMessage",
              blocks: e.errorMessage,
              context: e.builderContext
            }
          ) : null,
          d() === "sending" ? /* @__PURE__ */ s(
            M,
            {
              path: "sendingMessage",
              blocks: e.sendingMessage,
              context: e.builderContext
            }
          ) : null,
          d() === "error" && r ? /* @__PURE__ */ s("pre", { className: "builder-form-error-text pre-abc898ba", children: h(r) }) : null,
          d() === "success" ? /* @__PURE__ */ s(
            M,
            {
              path: "successMessage",
              blocks: e.successMessage,
              context: e.builderContext
            }
          ) : null
        ]
      }
    ),
    " "
  ] });
}
const Xn = {
  name: "Form:Input",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fad6f37889d9e40bbbbc72cdb5875d6ca",
  inputs: [
    {
      name: "type",
      type: "text",
      enum: ["text", "number", "email", "url", "checkbox", "radio", "range", "date", "datetime-local", "search", "tel", "time", "file", "month", "week", "password", "color", "hidden"],
      defaultValue: "text"
    },
    {
      name: "name",
      type: "string",
      required: !0,
      helperText: 'Every input in a form needs a unique name describing what it takes, e.g. "email"'
    },
    {
      name: "placeholder",
      type: "string",
      defaultValue: "Hello there",
      helperText: "Text to display when there is no value"
    },
    // TODO: handle value vs default value automatically like ng-model
    {
      name: "defaultValue",
      type: "string"
    },
    {
      name: "value",
      type: "string",
      advanced: !0
    },
    {
      name: "required",
      type: "boolean",
      helperText: "Is this input required to be filled out to submit a form",
      defaultValue: !1
    }
  ],
  noWrap: !0,
  static: !0,
  defaultStyles: {
    paddingTop: "10px",
    paddingBottom: "10px",
    paddingLeft: "10px",
    paddingRight: "10px",
    borderRadius: "3px",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: "#ccc"
  }
};
function Zn(e) {
  return /* @__PURE__ */ _e(
    "input",
    {
      ...e.attributes,
      key: U() && e.defaultValue ? e.defaultValue : "default-key",
      placeholder: e.placeholder,
      type: e.type,
      name: e.name,
      value: e.value,
      defaultValue: e.defaultValue,
      required: e.required
    }
  );
}
const ei = {
  name: "Form:Select",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2F83acca093fb24aaf94dee136e9a4b045",
  defaultStyles: {
    alignSelf: "flex-start"
  },
  inputs: [{
    name: "options",
    type: "list",
    required: !0,
    subFields: [{
      name: "value",
      type: "text",
      required: !0
    }, {
      name: "name",
      type: "text"
    }],
    defaultValue: [{
      value: "option 1"
    }, {
      value: "option 2"
    }]
  }, {
    name: "name",
    type: "string",
    required: !0,
    helperText: 'Every select in a form needs a unique name describing what it gets, e.g. "email"'
  }, {
    name: "defaultValue",
    type: "string"
  }, {
    name: "value",
    type: "string",
    advanced: !0
  }, {
    name: "required",
    type: "boolean",
    defaultValue: !1
  }],
  static: !0,
  noWrap: !0
};
function ti(e) {
  var t;
  return /* @__PURE__ */ _e(
    "select",
    {
      ...e.attributes,
      value: e.value,
      key: U() && e.defaultValue ? e.defaultValue : "default-key",
      defaultValue: e.defaultValue,
      name: e.name,
      required: e.required
    },
    (t = e.options) == null ? void 0 : t.map((n, i) => /* @__PURE__ */ s("option", { value: n.value, children: n.name || n.value }, `${n.name}-${i}`))
  );
}
const ni = {
  name: "Form:SubmitButton",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Fdf2820ffed1f4349a94c40b3221f5b98",
  defaultStyles: {
    appearance: "none",
    paddingTop: "15px",
    paddingBottom: "15px",
    paddingLeft: "25px",
    paddingRight: "25px",
    backgroundColor: "#3898EC",
    color: "white",
    borderRadius: "4px",
    cursor: "pointer"
  },
  inputs: [{
    name: "text",
    type: "text",
    defaultValue: "Click me"
  }],
  static: !0,
  noWrap: !0
  // TODO: optional children? maybe as optional form input
  // that only shows if advanced setting is flipped
  // TODO: defaultChildren
  // canHaveChildren: true,
};
function ii(e) {
  return /* @__PURE__ */ s("button", { type: "submit", ...e.attributes, children: e.text });
}
const ri = {
  name: "Form:TextArea",
  image: "https://cdn.builder.io/api/v1/image/assets%2FIsxPKMo2gPRRKeakUztj1D6uqed2%2Ff74a2f3de58c4c3e939204e5b6b8f6c3",
  inputs: [{
    advanced: !0,
    name: "value",
    type: "string"
  }, {
    name: "name",
    type: "string",
    required: !0,
    helperText: 'Every input in a form needs a unique name describing what it gets, e.g. "email"'
  }, {
    name: "defaultValue",
    type: "string"
  }, {
    name: "placeholder",
    type: "string",
    defaultValue: "Hello there"
  }, {
    name: "required",
    type: "boolean",
    defaultValue: !1
  }],
  defaultStyles: {
    paddingTop: "10px",
    paddingBottom: "10px",
    paddingLeft: "10px",
    paddingRight: "10px",
    borderRadius: "3px",
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: "#ccc"
  },
  static: !0,
  noWrap: !0
};
function ai(e) {
  return /* @__PURE__ */ s(
    "textarea",
    {
      ...e.attributes,
      placeholder: e.placeholder,
      name: e.name,
      value: e.value,
      defaultValue: e.defaultValue,
      required: e.required
    }
  );
}
const oi = {
  // friendlyName?
  name: "Raw:Img",
  hideFromInsertMenu: !0,
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-insert_photo-24px.svg?alt=media&token=4e5d0ef4-f5e8-4e57-b3a9-38d63a9b9dc4",
  inputs: [{
    name: "image",
    bubble: !0,
    type: "file",
    allowedFileTypes: Se,
    required: !0
  }],
  noWrap: !0,
  static: !0
};
function li(e) {
  function t() {
    const n = e.imgSrc || e.image;
    if (!(!n || typeof n != "string") && n.match(/builder\.io/))
      return ne(n);
  }
  return /* @__PURE__ */ s(
    "img",
    {
      loading: "lazy",
      style: {
        objectFit: e.backgroundSize || "cover",
        objectPosition: e.backgroundPosition || "center"
      },
      alt: e.altText,
      src: e.imgSrc || e.image,
      srcSet: t(),
      ...e.attributes
    },
    U() && e.imgSrc || "default-key"
  );
}
const si = {
  name: "Video",
  canHaveChildren: !0,
  defaultStyles: {
    minHeight: "20px",
    minWidth: "20px"
  },
  image: "https://firebasestorage.googleapis.com/v0/b/builder-3b0a2.appspot.com/o/images%2Fbaseline-videocam-24px%20(1).svg?alt=media&token=49a84e4a-b20e-4977-a650-047f986874bb",
  inputs: [{
    name: "video",
    type: "file",
    allowedFileTypes: Vn,
    bubble: !0,
    defaultValue: "https://cdn.builder.io/o/assets%2FYJIGb4i01jvw0SRdL5Bt%2Fd27731a526464deba0016216f5f9e570%2Fcompressed?apiKey=YJIGb4i01jvw0SRdL5Bt&token=d27731a526464deba0016216f5f9e570&alt=media&optimized=true",
    required: !0
  }, {
    name: "posterImage",
    type: "file",
    allowedFileTypes: Se,
    helperText: "Image to show before the video plays"
  }, {
    name: "autoPlay",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "controls",
    type: "boolean",
    defaultValue: !1
  }, {
    name: "muted",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "loop",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "playsInline",
    type: "boolean",
    defaultValue: !0
  }, {
    name: "fit",
    type: "text",
    defaultValue: "cover",
    enum: ["contain", "cover", "fill", "auto"]
  }, {
    name: "preload",
    type: "text",
    defaultValue: "metadata",
    enum: ["auto", "metadata", "none"]
  }, {
    name: "fitContent",
    type: "boolean",
    helperText: "When child blocks are provided, fit to them instead of using the aspect ratio",
    defaultValue: !0,
    advanced: !0
  }, {
    name: "position",
    type: "text",
    defaultValue: "center",
    enum: ["center", "top", "left", "right", "bottom", "top left", "top right", "bottom left", "bottom right"]
  }, {
    name: "height",
    type: "number",
    advanced: !0
  }, {
    name: "width",
    type: "number",
    advanced: !0
  }, {
    name: "aspectRatio",
    type: "number",
    advanced: !0,
    defaultValue: 0.7004048582995948
  }, {
    name: "lazyLoad",
    type: "boolean",
    helperText: 'Load this video "lazily" - as in only when a user scrolls near the video. Recommended for optmized performance and bandwidth consumption',
    defaultValue: !0,
    advanced: !0
  }],
  shouldReceiveBuilderProps: {
    builderBlock: !0
  }
};
function ci(e) {
  var o, l, c, d, h, g, u;
  const t = z(null);
  function n() {
    return {
      ...e.autoPlay === !0 ? {
        autoPlay: !0
      } : {},
      ...e.muted === !0 ? {
        muted: !0
      } : {},
      ...e.controls === !0 ? {
        controls: !0
      } : {},
      ...e.loop === !0 ? {
        loop: !0
      } : {},
      ...e.playsInline === !0 ? {
        playsInline: !0
      } : {}
    };
  }
  function i() {
    return {
      ...n()
    };
  }
  const [r, a] = k(() => {
  });
  return N(() => {
    if (e.lazyLoad) {
      const x = new IntersectionObserver(function(f) {
        f.forEach(function(m) {
          if (!m.isIntersecting)
            return;
          const y = m.target;
          try {
            Array.from(y.children).filter(
              (b) => b instanceof HTMLElement && b.tagName === "SOURCE"
            ).forEach((b) => {
              const S = b.dataset.src;
              S && (b.src = S);
            }), y.load(), x.unobserve(y);
          } catch (b) {
            console.error("Error loading lazy video:", b);
          }
        });
      });
      t.current && x.observe(t.current), a(x);
    }
  }, []), N(() => () => {
    r && r.disconnect();
  }, []), /* @__PURE__ */ D(
    "div",
    {
      style: {
        position: "relative"
      },
      children: [
        /* @__PURE__ */ s(
          "video",
          {
            className: "builder-video",
            ...i(),
            ref: t,
            preload: e.lazyLoad ? "none" : e.preload || "metadata",
            style: {
              width: "100%",
              height: "100%",
              ...(o = e.attributes) == null ? void 0 : o.style,
              objectFit: e.fit,
              objectPosition: e.position,
              // Hack to get object fit to work as expected and
              // not have the video overflow
              borderRadius: "1px",
              ...e.aspectRatio ? {
                position: "absolute"
              } : null
            },
            poster: e.posterImage,
            children: /* @__PURE__ */ s(
              "source",
              {
                type: "video/mp4",
                ...e.lazyLoad ? {
                  "data-src": e.video
                } : {
                  src: e.video
                }
              }
            )
          }
        ),
        e.aspectRatio && !(e.fitContent && ((c = (l = e.builderBlock) == null ? void 0 : l.children) != null && c.length)) ? /* @__PURE__ */ s(
          "div",
          {
            style: {
              width: "100%",
              paddingTop: e.aspectRatio * 100 + "%",
              pointerEvents: "none",
              fontSize: "0px"
            }
          }
        ) : null,
        (h = (d = e.builderBlock) == null ? void 0 : d.children) != null && h.length && e.fitContent ? /* @__PURE__ */ s(
          "div",
          {
            style: {
              display: "flex",
              flexDirection: "column",
              alignItems: "stretch"
            },
            children: e.children
          }
        ) : null,
        (u = (g = e.builderBlock) == null ? void 0 : g.children) != null && u.length && !e.fitContent ? /* @__PURE__ */ s(
          "div",
          {
            style: {
              pointerEvents: "none",
              display: "flex",
              flexDirection: "column",
              alignItems: "stretch",
              position: "absolute",
              top: "0",
              left: "0",
              width: "100%",
              height: "100%"
            },
            children: e.children
          }
        ) : null
      ]
    }
  );
}
const ui = () => [{
  component: Mn,
  ...Hn
}, {
  component: Kn,
  ...qn
}, {
  component: Yn,
  ...Jn
}, {
  component: Zn,
  ...Xn
}, {
  component: ii,
  ...ni
}, {
  component: ti,
  ...ei
}, {
  component: ai,
  ...ri
}, {
  component: li,
  ...oi
}, {
  component: ci,
  ...si
}], Be = () => [{
  component: St,
  ...En
}, {
  component: cn,
  ...Rn
}, {
  component: un,
  ...Pn
}, {
  component: fn,
  ...An
}, {
  component: hn,
  ...$n
}, {
  component: Dn,
  ...Wn
}, {
  component: Wi,
  ...Fn
}, {
  component: Un,
  ..._n
}, ...nt.includes(F) ? [{
  component: Nn,
  ...Bn
}] : [], {
  component: On,
  ...Ln
}, {
  component: wn,
  ...In
}, ...ui()], di = `function updateCookiesAndStyles(contentId, variants, isHydrationTarget, isAngularSDK) {
  function getAndSetVariantId() {
    function setCookie(name, value, days) {
      let expires = '';
      if (days) {
        const date = new Date();
        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
        expires = '; expires=' + date.toUTCString();
      }
      document.cookie = name + '=' + (value || '') + expires + '; path=/' + '; Secure; SameSite=None';
    }
    function getCookie(name) {
      const nameEQ = name + '=';
      const ca = document.cookie.split(';');
      for (let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
      }
      return null;
    }
    const cookieName = \`builder.tests.\${contentId}\`;
    const variantInCookie = getCookie(cookieName);
    const availableIDs = variants.map(vr => vr.id).concat(contentId);
    if (variantInCookie && availableIDs.includes(variantInCookie)) {
      return variantInCookie;
    }
    let n = 0;
    const random = Math.random();
    for (let i = 0; i < variants.length; i++) {
      const variant = variants[i];
      const testRatio = variant.testRatio;
      n += testRatio;
      if (random < n) {
        setCookie(cookieName, variant.id);
        return variant.id;
      }
    }
    setCookie(cookieName, contentId);
    return contentId;
  }
  const winningVariantId = getAndSetVariantId();
  let styleEl = document.currentScript?.previousElementSibling;
  if (isAngularSDK) {
    styleEl = document.currentScript?.parentElement?.previousElementSibling?.querySelector('style');
  }
  if (isHydrationTarget) {
    styleEl.remove();
    const thisScriptEl = document.currentScript;
    thisScriptEl?.remove();
  } else {
    const newStyleStr = variants.concat({
      id: contentId
    }).filter(variant => variant.id !== winningVariantId).map(value => {
      return \`.variant-\${value.id} {  display: none; }
        \`;
    }).join('');
    styleEl.innerHTML = newStyleStr;
  }
}`, mi = `function updateVariantVisibility(variantContentId, defaultContentId, isHydrationTarget) {
  if (!navigator.cookieEnabled) {
    return;
  }
  function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) === ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  const cookieName = \`builder.tests.\${defaultContentId}\`;
  const winningVariant = getCookie(cookieName);
  const parentDiv = document.currentScript?.parentElement;
  const isDefaultContent = variantContentId === defaultContentId;
  const isWinningVariant = winningVariant === variantContentId;
  if (isWinningVariant && !isDefaultContent) {
    parentDiv?.removeAttribute('hidden');
    parentDiv?.removeAttribute('aria-hidden');
  } else if (!isWinningVariant && isDefaultContent) {
    parentDiv?.setAttribute('hidden', 'true');
    parentDiv?.setAttribute('aria-hidden', 'true');
  }
  if (isHydrationTarget) {
    if (!isWinningVariant) {
      parentDiv?.remove();
    }
    const thisScriptEl = document.currentScript;
    thisScriptEl?.remove();
  }
  return;
}`, rt = "builderIoAbTest", at = "builderIoRenderContent", ae = (e) => Object.values((e == null ? void 0 : e.variations) || {}).map((t) => ({
  ...t,
  testVariationId: t.id,
  id: e == null ? void 0 : e.id
})), fi = ({
  canTrack: e,
  content: t
}) => !(!(ae(t).length > 0) || !e || G()), hi = (e) => e === "react" || e === "reactNative", bi = F === "angular", ot = hi(F), gi = () => `
  window.${rt} = ${di}
  window.${at} = ${mi}
  `, yi = (e, t) => `
  window.${rt}(
    "${t}",${JSON.stringify(e)}, ${ot}, ${bi}
  )`, pi = ({
  contentId: e,
  variationId: t
}) => `window.${at}(
    "${t}", "${e}", ${ot}
  )`;
function Ne(e) {
  return Math.round(e * 1e3) / 1e3;
}
const vi = (e, t, n = !0) => {
  if (!(e instanceof HTMLElement))
    return null;
  let i = n ? e : e.parentElement;
  do {
    if (!i)
      return null;
    if (t(i))
      return i;
  } while (i = i.parentElement);
  return null;
}, xi = (e) => vi(e, (t) => {
  const n = t.getAttribute("builder-id") || t.id;
  return (n == null ? void 0 : n.indexOf("builder-")) === 0;
}), $e = ({
  event: e,
  target: t
}) => {
  const n = t.getBoundingClientRect(), i = e.clientX - n.left, r = e.clientY - n.top, a = Ne(i / n.width), o = Ne(r / n.height);
  return {
    x: a,
    y: o
  };
}, Si = (e) => {
  const t = e.target, n = t && xi(t), i = (n == null ? void 0 : n.getAttribute("builder-id")) || (n == null ? void 0 : n.id);
  return {
    targetBuilderElement: i || void 0,
    metadata: {
      targetOffset: t ? $e({
        event: e,
        target: t
      }) : void 0,
      builderTargetOffset: n ? $e({
        event: e,
        target: n
      }) : void 0,
      builderElementIndex: n && i ? [].slice.call(document.getElementsByClassName(i)).indexOf(n) : void 0
    }
  };
}, ki = ["svelte", "qwik", "vue"], We = () => ki.includes(F) && (U() || le()), Ci = (e) => {
  var a, o;
  const t = e.family + (e.kind && !e.kind.includes("#") ? ", " + e.kind : ""), n = t.split(",")[0], i = (o = e.fileUrl) != null ? o : (a = e == null ? void 0 : e.files) == null ? void 0 : a.regular;
  let r = "";
  if (i && t && n && (r += `
@font-face {
font-family: "${t}";
src: local("${n}"), url('${i}') format('woff2');
font-display: fallback;
font-weight: 400;
}
      `.trim()), e.files)
    for (const l in e.files) {
      if (!(String(Number(l)) === l))
        continue;
      const d = e.files[l];
      d && d !== i && (r += `
@font-face {
font-family: "${t}";
src: url('${d}') format('woff2');
font-display: fallback;
font-weight: ${l};
}
        `.trim());
    }
  return r;
}, Ti = ({
  customFonts: e
}) => {
  var t;
  return ((t = e == null ? void 0 : e.map((n) => Ci(n))) == null ? void 0 : t.join(" ")) || "";
}, Ii = ({
  cssCode: e,
  contentId: t
}) => e ? t ? (e == null ? void 0 : e.replace(/&/g, `div[builder-content-id="${t}"]`)) || "" : e : "", wi = `
.builder-button {
  all: unset;
}

.builder-text > p:first-of-type, .builder-text > .builder-paragraph:first-of-type {
  margin: 0;
}
.builder-text > p, .builder-text > .builder-paragraph {
  color: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  font-weight: inherit;
  font-size: inherit;
  text-align: inherit;
  font-family: inherit;
}
`, Ei = (e) => e ? "" : wi, Ri = (e) => `variant-${e}`;
function Pi(e) {
  var H, q, p;
  const t = z(null);
  k(() => !1);
  const [n, i] = k(() => null), [r, a] = k(() => "");
  function o(v) {
    var V, $;
    const I = {
      ...e.builderContextSignal.rootState,
      ...v
    };
    e.builderContextSignal.rootSetState ? ($ = (V = e.builderContextSignal).rootSetState) == null || $.call(V, I) : e.setBuilderContextSignal((R) => ({
      ...R,
      rootState: I
    }));
  }
  function l(v) {
    var V, $, R, A, w;
    const I = {
      ...e.builderContextSignal.content,
      ...v,
      data: {
        ...(V = e.builderContextSignal.content) == null ? void 0 : V.data,
        ...v == null ? void 0 : v.data
      },
      meta: {
        ...($ = e.builderContextSignal.content) == null ? void 0 : $.meta,
        ...v == null ? void 0 : v.meta,
        breakpoints: ((R = v == null ? void 0 : v.meta) == null ? void 0 : R.breakpoints) || ((w = (A = e.builderContextSignal.content) == null ? void 0 : A.meta) == null ? void 0 : w.breakpoints)
      }
    };
    e.setBuilderContextSignal((B) => ({
      ...B,
      content: I
    }));
  }
  function c() {
    return e.showContent ? {} : {
      hidden: !0,
      "aria-hidden": !0
    };
  }
  const [d, h] = k(
    () => e.contentWrapper || "div"
  );
  function g(v) {
    return ut({
      model: e.model,
      trustedHosts: e.trustedHosts,
      callbacks: {
        configureSdk: (I) => {
          var R;
          const { breakpoints: V, contentId: $ } = I;
          !$ || $ !== ((R = e.builderContextSignal.content) == null ? void 0 : R.id) || V && l({
            meta: {
              breakpoints: V
            }
          });
        },
        animation: (I) => {
          Ke(I);
        },
        contentUpdate: (I) => {
          l(I);
        },
        stateUpdate: (I) => {
          o(I);
        }
      }
    })(v);
  }
  const [u, x] = k(() => ({})), [f, m] = k(() => ({})), [y, b] = k(() => !1);
  function S(v) {
    var I, V;
    if (e.builderContextSignal.content) {
      const $ = (I = e.builderContextSignal.content) == null ? void 0 : I.testVariationId, R = (V = e.builderContextSignal.content) == null ? void 0 : V.id;
      Te({
        apiHost: e.apiHost,
        type: "click",
        canTrack: Z(e.canTrack),
        contentId: R,
        apiKey: e.apiKey,
        variationId: $ !== R ? $ : void 0,
        ...Si(v),
        unique: !y
      });
    }
    y || b(!0);
  }
  function T() {
    var I, V, $;
    const v = ($ = (V = (I = e.builderContextSignal.content) == null ? void 0 : I.data) == null ? void 0 : V.httpRequests) != null ? $ : {};
    Object.entries(v).forEach(
      ([R, A]) => {
        if (!A)
          return;
        const w = typeof A == "object" && A["@type"] === "@builder.io/core:Request";
        if (f[R] || u[R] && !U())
          return;
        const B = w ? A.request.url : A;
        f[R] = !0;
        const C = B.replace(
          /{{([^}]+)}}/g,
          (O, j) => String(
            Q({
              code: j,
              context: e.context || {},
              localState: void 0,
              rootState: e.builderContextSignal.rootState,
              rootSetState: e.builderContextSignal.rootSetState
            })
          )
        ), W = w ? {
          url: C,
          method: A.request.method,
          headers: A.request.headers,
          body: A.request.body
        } : {
          url: C,
          method: "GET"
        };
        Fe(JSON.stringify(W));
        const L = {
          method: W.method,
          headers: W.headers,
          body: W.body
        };
        W.method === "GET" && delete L.body, fetch(W.url, L).then((O) => O.json()).then((O) => {
          o({
            [R]: O
          }), u[R] = !0;
        }).catch((O) => {
          console.error(
            "error fetching dynamic data",
            JSON.stringify(A),
            O
          );
        }).finally(() => {
          f[R] = !1;
        });
      }
    );
  }
  function E() {
    U() && window.dispatchEvent(
      new CustomEvent(
        "builder:component:stateChange",
        {
          detail: {
            state: ye(e.builderContextSignal.rootState),
            ref: {
              name: e.model
            }
          }
        }
      )
    );
  }
  const _ = z(!1);
  return _.current || (T(), E(), _.current = !0), N(() => {
    var v, I, V, $, R;
    if (G()) {
      U() && !e.isNestedRender && (window.addEventListener("message", g), lt({
        ...e.locale ? {
          locale: e.locale
        } : {},
        ...e.enrich ? {
          enrich: e.enrich
        } : {},
        ...e.trustedHosts ? {
          trustedHosts: e.trustedHosts
        } : {},
        modelName: (v = e.model) != null ? v : "",
        apiKey: e.apiKey
      }), Object.values(
        e.builderContextSignal.componentInfos
      ).forEach((C) => {
        var W, L;
        if (!((W = C.models) != null && W.length) || C.models.includes(e.model)) {
          const O = st(C);
          (L = window.parent) == null || L.postMessage(O, "*");
        }
      }), window.addEventListener(
        "builder:component:stateChangeListenerActivated",
        E
      ));
      const A = e.builderContextSignal.content && Z(e.canTrack), w = ct({
        name: `builder.tests.${(I = e.builderContextSignal.content) == null ? void 0 : I.id}`,
        canTrack: !0
      }), B = (V = e.builderContextSignal.content) == null ? void 0 : V.testVariationId;
      if (A && B === w) {
        const C = ($ = e.builderContextSignal.content) == null ? void 0 : $.id, W = e.apiKey;
        Te({
          apiHost: e.apiHost,
          type: "impression",
          canTrack: !0,
          contentId: C,
          apiKey: W,
          variationId: w !== C ? w : void 0
        });
      }
      if (le() && !U()) {
        const C = new URL(location.href).searchParams, W = C.get("builder.preview"), L = C.get(
          `builder.overrides.${W}`
        ), O = C.get("apiKey") || C.get("builder.space");
        (W === "BUILDER_STUDIO" || W === e.model && O === e.apiKey && (!e.content || L === e.content.id)) && Le({
          model: e.model,
          apiKey: e.apiKey,
          apiVersion: e.builderContextSignal.apiVersion,
          ...W === "BUILDER_STUDIO" && ((R = e.context) != null && R.symbolId) ? {
            query: {
              id: e.context.symbolId
            }
          } : {}
        }).then((j) => {
          j && l(j);
        });
      }
    }
  }, []), N(() => {
    e.content && l(e.content);
  }, [e.content]), N(() => {
    E();
  }, [e.builderContextSignal.rootState]), N(() => {
    if (e.data) {
      if (n === e.data)
        return;
      o(e.data), i(e.data);
    }
  }, [e.data]), N(() => {
    if (e.locale) {
      if (r === e.locale)
        return;
      o({
        locale: e.locale
      }), a(e.locale);
    }
  }, [e.locale]), N(() => () => {
    G() && (window.removeEventListener("message", g), window.removeEventListener(
      "builder:component:stateChangeListenerActivated",
      E
    ));
  }, []), /* @__PURE__ */ s(ve.Provider, { value: e.builderContextSignal, children: e.builderContextSignal.content || We() ? /* @__PURE__ */ s(
    d,
    {
      ref: t,
      onClick: (v) => S(v),
      "builder-content-id": (H = e.builderContextSignal.content) == null ? void 0 : H.id,
      "builder-model": e.model,
      className: Ri(
        ((q = e.content) == null ? void 0 : q.testVariationId) || ((p = e.content) == null ? void 0 : p.id)
      ),
      style: {
        display: !e.builderContextSignal.content && We() ? "none" : void 0
      },
      ...c(),
      ...e.contentWrapperProps,
      children: e.children
    }
  ) : null });
}
function Vi(e) {
  const [t, n] = k(
    () => `
${Ii({
      cssCode: e.cssCode,
      contentId: e.contentId
    })}
${Ti({
      customFonts: e.customFonts
    })}
${Ei(e.isNestedRender)}
`.trim()
  );
  return /* @__PURE__ */ s(
    te,
    {
      id: "builderio-content",
      styles: t,
      nonce: e.nonce
    }
  );
}
const Ai = ({
  content: e,
  data: t,
  locale: n
}) => {
  var a, o, l;
  const i = {}, r = ((a = e == null ? void 0 : e.data) == null ? void 0 : a.state) || {};
  return (l = (o = e == null ? void 0 : e.data) == null ? void 0 : o.inputs) == null || l.forEach((c) => {
    c.name && c.defaultValue !== void 0 && (i[c.name] = c.defaultValue);
  }), {
    ...i,
    ...r,
    ...t,
    ...n ? {
      locale: n
    } : {}
  };
}, Bi = ({
  content: e,
  data: t
}) => e ? {
  ...e,
  data: {
    ...e == null ? void 0 : e.data,
    ...t
  },
  meta: e == null ? void 0 : e.meta
} : void 0;
function De(e) {
  var d, h, g, u, x, f, m, y, b;
  const [t, n] = k(
    () => {
      var S, T;
      return pi({
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain
        variationId: (S = e.content) == null ? void 0 : S.testVariationId,
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-non-null-asserted-optional-chain
        contentId: (T = e.content) == null ? void 0 : T.id
      });
    }
  );
  function i(S) {
    l((T) => ({
      ...T,
      rootState: S
    }));
  }
  const [r, a] = k(
    () => [
      ...Be(),
      ...e.customComponents || []
    ].reduce(
      (S, { component: T, ...E }) => ({
        ...S,
        [E.name]: {
          component: T,
          ...Ie(E)
        }
      }),
      {}
    )
  ), [o, l] = k(() => ({
    content: Bi({
      content: e.content,
      data: e.data
    }),
    localState: void 0,
    rootState: Ai({
      content: e.content,
      data: e.data,
      locale: e.locale
    }),
    rootSetState: i,
    context: e.context || {},
    canTrack: e.canTrack,
    apiKey: e.apiKey,
    apiVersion: e.apiVersion,
    componentInfos: [
      ...Be(),
      ...e.customComponents || []
    ].reduce(
      (S, { component: T, ...E }) => ({
        ...S,
        [E.name]: Ie(E)
      }),
      {}
    ),
    inheritedStyles: {},
    BlocksWrapper: e.blocksWrapper || "div",
    BlocksWrapperProps: e.blocksWrapperProps || {},
    nonce: e.nonce || "",
    model: e.model
  })), c = z(!1);
  if (!c.current) {
    e.apiKey || ee.error(
      "No API key provided to `Content` component. This can cause issues. Please provide an API key using the `apiKey` prop."
    );
    const S = (h = (d = o.content) == null ? void 0 : d.data) == null ? void 0 : h.jsCode;
    S && Q({
      code: S,
      context: e.context || {},
      localState: void 0,
      rootState: o.rootState,
      rootSetState: (T) => {
        Object.assign(o.rootState, T);
      },
      isExpression: !1
    }), c.current = !0;
  }
  return /* @__PURE__ */ s(
    He.Provider,
    {
      value: {
        registeredComponents: r
      },
      children: /* @__PURE__ */ D(
        Pi,
        {
          apiHost: e.apiHost,
          nonce: e.nonce,
          content: e.content,
          data: e.data,
          model: e.model,
          context: e.context,
          apiKey: e.apiKey,
          canTrack: e.canTrack,
          locale: e.locale,
          enrich: e.enrich,
          showContent: e.showContent,
          builderContextSignal: o,
          contentWrapper: e.contentWrapper,
          contentWrapperProps: e.contentWrapperProps,
          trustedHosts: e.trustedHosts,
          isNestedRender: e.isNestedRender,
          setBuilderContextSignal: l,
          children: [
            e.isSsrAbTest ? /* @__PURE__ */ s(
              K,
              {
                id: "builderio-variant-visibility",
                scriptStr: t,
                nonce: e.nonce || ""
              }
            ) : null,
            /* @__PURE__ */ s(
              Vi,
              {
                nonce: e.nonce || "",
                isNestedRender: e.isNestedRender,
                contentId: (g = o.content) == null ? void 0 : g.id,
                cssCode: (x = (u = o.content) == null ? void 0 : u.data) == null ? void 0 : x.cssCode,
                customFonts: (m = (f = o.content) == null ? void 0 : f.data) == null ? void 0 : m.customFonts
              }
            ),
            /* @__PURE__ */ s(
              M,
              {
                blocks: (b = (y = o.content) == null ? void 0 : y.data) == null ? void 0 : b.blocks,
                context: o,
                registeredComponents: r,
                linkComponent: e.linkComponent
              }
            )
          ]
        }
      )
    }
  );
}
function Ni(e) {
  var o;
  const [t, n] = k(
    () => fi({
      canTrack: Z(e.canTrack),
      content: e.content
    })
  );
  function i() {
    var l;
    return yi(
      ae(e.content).map((c) => ({
        id: c.testVariationId,
        testRatio: c.testRatio
      })),
      ((l = e.content) == null ? void 0 : l.id) || ""
    );
  }
  function r() {
    return ae(e.content).map((l) => `.variant-${l.testVariationId} { display: none; } `).join("");
  }
  function a() {
    var l;
    return t ? {
      ...e.content,
      testVariationId: (l = e.content) == null ? void 0 : l.id
    } : dt({
      item: e.content,
      canTrack: Z(e.canTrack)
    });
  }
  return N(() => {
  }, []), /* @__PURE__ */ D(P, { children: [
    !e.isNestedRender && F !== "reactNative" ? /* @__PURE__ */ D(P, { children: [
      /* @__PURE__ */ s(
        K,
        {
          id: "builderio-init-variants-fns",
          scriptStr: gi(),
          nonce: e.nonce || ""
        }
      ),
      nt.includes(F) ? /* @__PURE__ */ s(
        K,
        {
          id: "builderio-init-personalization-variants-fns",
          nonce: e.nonce || "",
          scriptStr: kn()
        }
      ) : null
    ] }) : null,
    t ? /* @__PURE__ */ D(P, { children: [
      /* @__PURE__ */ s(
        te,
        {
          id: "builderio-variants",
          styles: r(),
          nonce: e.nonce || ""
        }
      ),
      /* @__PURE__ */ s(
        K,
        {
          id: "builderio-variants-visibility",
          scriptStr: i(),
          nonce: e.nonce || ""
        }
      ),
      (o = ae(e.content)) == null ? void 0 : o.map((l) => /* @__PURE__ */ s(
        De,
        {
          apiHost: e.apiHost,
          isNestedRender: e.isNestedRender,
          nonce: e.nonce,
          content: l,
          showContent: !1,
          model: e.model,
          data: e.data,
          context: e.context,
          apiKey: e.apiKey,
          apiVersion: e.apiVersion,
          customComponents: e.customComponents,
          linkComponent: e.linkComponent,
          canTrack: e.canTrack,
          locale: e.locale,
          enrich: e.enrich,
          isSsrAbTest: t,
          blocksWrapper: e.blocksWrapper,
          blocksWrapperProps: e.blocksWrapperProps,
          contentWrapper: e.contentWrapper,
          contentWrapperProps: e.contentWrapperProps,
          trustedHosts: e.trustedHosts
        },
        l.testVariationId
      ))
    ] }) : null,
    /* @__PURE__ */ s(
      De,
      {
        apiHost: e.apiHost,
        nonce: e.nonce,
        isNestedRender: e.isNestedRender,
        content: a(),
        showContent: !0,
        model: e.model,
        data: e.data,
        context: e.context,
        apiKey: e.apiKey,
        apiVersion: e.apiVersion,
        customComponents: e.customComponents,
        linkComponent: e.linkComponent,
        canTrack: e.canTrack,
        locale: e.locale,
        enrich: e.enrich,
        isSsrAbTest: t,
        blocksWrapper: e.blocksWrapper,
        blocksWrapperProps: e.blocksWrapperProps,
        contentWrapper: e.contentWrapper,
        contentWrapperProps: e.contentWrapperProps,
        trustedHosts: e.trustedHosts
      }
    )
  ] });
}
const $i = async ({
  builderContextValue: e,
  symbol: t
}) => {
  if (t != null && t.model && // This is a hack, we should not need to check for this, but it is needed for Svelte.
  (e != null && e.apiKey))
    return Le({
      model: t.model,
      apiKey: e.apiKey,
      apiVersion: e.apiVersion,
      ...(t == null ? void 0 : t.entry) && {
        query: {
          id: t.entry
        }
      }
    }).catch((n) => {
      ee.error("Could not fetch symbol content: ", n);
    });
};
function Wi(e) {
  var h, g, u, x, f;
  function t() {
    return "div";
  }
  function n() {
    return "div";
  }
  function i() {
    return Object.values(e.builderComponents);
  }
  function r() {
    var m, y;
    return [
      e.attributes[J()],
      "builder-symbol",
      (m = e.symbol) != null && m.inline ? "builder-inline-symbol" : void 0,
      (y = e.symbol) != null && y.dynamic || e.dynamic ? "builder-dynamic-symbol" : void 0
    ].filter(Boolean).join(" ");
  }
  const [a, o] = k(() => {
    var m;
    return (m = e.symbol) == null ? void 0 : m.content;
  }), [l, c] = k(() => {
    var m;
    return (m = e.symbol) == null ? void 0 : m.entry;
  });
  function d() {
    var m;
    a && l === ((m = e.symbol) == null ? void 0 : m.entry) || $i({
      symbol: e.symbol,
      builderContextValue: e.builderContext
    }).then((y) => {
      var b;
      y && (o(y), c((b = e.symbol) == null ? void 0 : b.entry));
    });
  }
  return N(() => {
  }, []), N(() => {
    d();
  }, [e.symbol]), /* @__PURE__ */ s("div", { ...e.attributes, className: r(), children: /* @__PURE__ */ s(
    Ni,
    {
      nonce: e.builderContext.nonce,
      isNestedRender: !0,
      apiVersion: e.builderContext.apiVersion,
      apiKey: e.builderContext.apiKey,
      context: {
        ...e.builderContext.context,
        symbolId: (h = e.builderBlock) == null ? void 0 : h.id
      },
      customComponents: i(),
      data: {
        ...(g = e.symbol) == null ? void 0 : g.data,
        ...e.builderContext.localState,
        ...(u = a == null ? void 0 : a.data) == null ? void 0 : u.state
      },
      canTrack: e.builderContext.canTrack,
      model: (f = (x = e.symbol) == null ? void 0 : x.model) != null ? f : "",
      content: a,
      linkComponent: e.builderLinkComponent,
      blocksWrapper: t(),
      contentWrapper: n()
    }
  ) });
}
export {
  M as Blocks,
  ve as BuilderContext,
  St as Button,
  cn as Columns,
  Ni as Content,
  un as Fragment,
  fn as Image,
  hn as Section,
  Wi as Symbol,
  Un as Text,
  ci as Video,
  Mi as setClientUserAttributes
};
