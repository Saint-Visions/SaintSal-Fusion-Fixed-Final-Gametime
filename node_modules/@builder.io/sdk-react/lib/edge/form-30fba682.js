import { jsxs as F, Fragment as O, jsx as b } from "react/jsx-runtime";
import { useRef as R, useState as E } from "react";
import { Blocks as S, set as U, get as q } from "./blocks-0269007e.js";
import { isEditing as $, logFetch as L } from "./server-entry-fb5f2b80.js";
import "./blocks-exports.mjs";
import "./get-class-prop-name-770bdff2.js";
import "./dynamic-renderer-8b343325.js";
const W = ["production", "qa", "test", "development", "dev", "cdn-qa", "cloud", "fast", "cdn2", "cdn-prod"], z = () => {
  const e = process.env.NODE_ENV || "production";
  return W.includes(e) ? e : "production";
};
function X(e) {
  const r = R(null), [N, c] = E(() => "unsubmitted"), [y, v] = E(() => null), [H, P] = E(() => "");
  function x(i) {
    var m, l;
    const u = {
      ...e.builderContext.rootState,
      ...i
    };
    e.builderContext.rootSetState ? (l = (m = e.builderContext).rootSetState) == null || l.call(m, u) : e.builderContext.rootState = u;
  }
  function h() {
    return $() && e.previewState || N;
  }
  function D(i) {
    return JSON.stringify(i, null, 2);
  }
  function A(i) {
    var m;
    const u = e.sendWithJs || e.sendSubmissionsTo === "email";
    if (e.sendSubmissionsTo === "zapier")
      i.preventDefault();
    else if (u) {
      if (!(e.action || e.sendSubmissionsTo === "email")) {
        i.preventDefault();
        return;
      }
      i.preventDefault();
      const l = i.currentTarget || i.target, C = e.customHeaders || {};
      let g;
      const j = new FormData(l), T = Array.from(l.querySelectorAll("input,select,textarea")).filter((t) => !!t.name).filter(
        (t) => !!t.name && (t.type !== "radio" || t.checked)
      ).map((t) => {
        let n;
        const o = t.name;
        if (t instanceof HTMLInputElement)
          if (t.type === "radio") {
            if (t.checked)
              return n = t.value, {
                key: o,
                value: n
              };
          } else if (t.type === "checkbox")
            n = t.checked;
          else if (t.type === "number" || t.type === "range") {
            const d = t.valueAsNumber;
            isNaN(d) || (n = d);
          } else
            t.type === "file" ? n = t.files : n = t.value;
        else
          n = t.value;
        return {
          key: o,
          value: n
        };
      });
      let a = e.contentType;
      if (e.sendSubmissionsTo === "email" && (a = "multipart/form-data"), Array.from(T).forEach(({ value: t }) => {
        (t instanceof File || Array.isArray(t) && t[0] instanceof File || t instanceof FileList) && (a = "multipart/form-data");
      }), a !== "application/json")
        g = j;
      else {
        const t = {};
        Array.from(T).forEach(({ value: n, key: o }) => {
          U(t, o, n);
        }), g = JSON.stringify(t);
      }
      a && a !== "multipart/form-data" && (u && ((m = e.action) != null && m.includes("zapier.com")) || (C["content-type"] = a));
      const M = new CustomEvent("presubmit", { detail: { body: g } });
      if (r.current && (r.current.dispatchEvent(M), M.defaultPrevented))
        return;
      if (c("sending"), e.sendSubmissionsTo === "email" && (e.sendSubmissionsToEmail === "your@email.com" || !e.sendSubmissionsToEmail)) {
        const t = "SubmissionsToEmail is required when sendSubmissionsTo is set to email";
        console.error(t), c("error"), x({ formErrorMessage: t });
        return;
      }
      const J = `${z() === "dev" ? "http://localhost:5000" : "https://builder.io"}/api/v1/form-submit?apiKey=${e.builderContext.apiKey}&to=${btoa(
        e.sendSubmissionsToEmail || ""
      )}&name=${encodeURIComponent(e.name || "")}`, k = e.sendSubmissionsTo === "email" ? J : e.action;
      L(k), fetch(k, { body: g, headers: C, method: e.method || "post" }).then(
        async (t) => {
          var d, w;
          let n;
          const o = t.headers.get("content-type");
          if (o && o.indexOf("application/json") !== -1 ? n = await t.json() : n = await t.text(), !t.ok) {
            const f = new CustomEvent("submit:error", {
              detail: { error: n, status: t.status }
            });
            if ((d = r.current) != null && d.nativeElement && ((w = r.current) == null || w.nativeElement.dispatchEvent(f), f.defaultPrevented))
              return;
            v(n), c("error");
            let s = e.errorMessagePath ? q(n, e.errorMessagePath) : n.message || n.error || n;
            typeof s != "string" && (s = JSON.stringify(s)), P(s), x({ formErrorMessage: s });
            return;
          }
          if (v(n), c(t.ok ? "success" : "error"), t.ok) {
            const f = new CustomEvent("submit:success", {
              detail: { res: t, body: n }
            });
            if (r.current) {
              if (r.current.dispatchEvent(f), f.defaultPrevented)
                return;
              e.resetFormOnSubmit !== !1 && r.current.reset();
            }
            if (e.successUrl)
              if (r.current) {
                const s = new CustomEvent("route", {
                  detail: { url: e.successUrl }
                });
                r.current.dispatchEvent(s), s.defaultPrevented || (location.href = e.successUrl);
              } else
                location.href = e.successUrl;
          }
        },
        (t) => {
          const n = new CustomEvent("submit:error", {
            detail: { error: t }
          });
          r.current && (r.current.dispatchEvent(n), n.defaultPrevented) || (v(t), c("error"));
        }
      );
    }
  }
  return /* @__PURE__ */ F(O, { children: [
    " ",
    /* @__PURE__ */ b("style", { children: ".pre-abc898ba {   padding: 10px;   color: red;   text-align: center; }" }),
    " ",
    /* @__PURE__ */ F(
      "form",
      {
        validate: e.validate,
        ref: r,
        action: !e.sendWithJs && e.action,
        method: e.method,
        name: e.name,
        onSubmit: (i) => A(i),
        ...e.attributes,
        children: [
          e.children,
          h() === "error" ? /* @__PURE__ */ b(
            S,
            {
              path: "errorMessage",
              blocks: e.errorMessage,
              context: e.builderContext
            }
          ) : null,
          h() === "sending" ? /* @__PURE__ */ b(
            S,
            {
              path: "sendingMessage",
              blocks: e.sendingMessage,
              context: e.builderContext
            }
          ) : null,
          h() === "error" && y ? /* @__PURE__ */ b("pre", { className: "builder-form-error-text pre-abc898ba", children: D(y) }) : null,
          h() === "success" ? /* @__PURE__ */ b(
            S,
            {
              path: "successMessage",
              blocks: e.successMessage,
              context: e.builderContext
            }
          ) : null
        ]
      }
    ),
    " "
  ] });
}
export {
  X as default
};
