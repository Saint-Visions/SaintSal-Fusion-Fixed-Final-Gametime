import { jsx as l, jsxs as j } from "react/jsx-runtime";
import * as p from "react";
import { useState as x } from "react";
import { Blocks as g } from "./blocks-exports.mjs";
import "./server-entry-fb5f2b80.js";
const y = (t) => t.toString();
function B(t) {
  var a;
  const [o, d] = x(() => []);
  function s() {
    return !!(t.grid || t.oneAtATime);
  }
  function C() {
    return {
      display: "flex",
      alignItems: "stretch",
      flexDirection: "column",
      ...t.grid && {
        flexDirection: "row",
        alignItems: "flex-start",
        flexWrap: "wrap"
      }
    };
  }
  function h() {
    const n = {
      ...{
        display: "flex",
        flexDirection: "column"
      },
      alignItems: "stretch",
      cursor: "pointer"
    };
    return Object.fromEntries(
      Object.entries(n).filter(([r, u]) => u !== void 0)
    );
  }
  function I(e) {
    return `builder-accordion-title builder-accordion-title-${o.includes(e) ? "open" : "closed"}`;
  }
  function k(e) {
    return `builder-accordion-detail builder-accordion-detail-${o.includes(e) ? "open" : "closed"}`;
  }
  function c() {
    let e = null;
    if (t.grid && o.length && document) {
      const r = o[0];
      let i = document.querySelector(
        `.builder-accordion-title[data-index="${r}"]`
      );
      if (e = r, i) {
        let m = i.getBoundingClientRect();
        for (; i = i && i.nextElementSibling; )
          if (i) {
            if (i.classList.contains("builder-accordion-detail"))
              continue;
            const f = i.getBoundingClientRect();
            if (f.left > m.left) {
              const b = parseInt(
                i.getAttribute("data-index") || "",
                10
              );
              isNaN(b) || (m = f, e = b);
            } else
              break;
          }
      }
    }
    return typeof e == "number" && (e = e + 1), e;
  }
  function O() {
    const e = {
      order: typeof c() == "number" ? c() : void 0,
      ...t.grid && {
        width: "100%"
      }
    };
    return Object.fromEntries(
      Object.entries(e).filter(([n, r]) => r !== void 0)
    );
  }
  function v(e) {
    o.includes(e) ? d(s() ? [] : o.filter((n) => n !== e)) : d(s() ? [e] : o.concat(e));
  }
  return /* @__PURE__ */ l("div", { className: "builder-accordion", style: C(), children: (a = t.items) == null ? void 0 : a.map((e, n) => /* @__PURE__ */ j(p.Fragment, { children: [
    /* @__PURE__ */ l(
      "div",
      {
        className: I(n),
        style: {
          ...h(),
          ...t.grid && {
            width: t.gridRowWidth,
            order: c() !== null ? y(n) : y(n + 1)
          }
        },
        "data-index": n,
        onClick: (r) => v(n),
        children: /* @__PURE__ */ l(
          g,
          {
            blocks: e.title,
            path: `items.${n}.title`,
            parent: t.builderBlock.id,
            context: t.builderContext,
            registeredComponents: t.builderComponents,
            linkComponent: t.builderLinkComponent
          }
        )
      }
    ),
    o.includes(n) ? /* @__PURE__ */ l(
      "div",
      {
        className: k(n),
        style: O(),
        children: /* @__PURE__ */ l(
          g,
          {
            blocks: e.detail,
            path: `items.${n}.detail`,
            parent: t.builderBlock.id,
            context: t.builderContext,
            registeredComponents: t.builderComponents,
            linkComponent: t.builderLinkComponent
          }
        )
      }
    ) : null
  ] }, n)) });
}
export {
  B as default
};
