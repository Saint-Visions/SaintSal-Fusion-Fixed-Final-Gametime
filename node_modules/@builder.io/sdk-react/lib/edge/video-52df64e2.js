import { jsxs as z, jsx as i } from "react/jsx-runtime";
import { useRef as I, useState as R, useEffect as m } from "react";
function j(e) {
  var a, c, d, u, s, f, h;
  const n = I(null);
  function b() {
    return {
      ...e.autoPlay === !0 ? {
        autoPlay: !0
      } : {},
      ...e.muted === !0 ? {
        muted: !0
      } : {},
      ...e.controls === !0 ? {
        controls: !0
      } : {},
      ...e.loop === !0 ? {
        loop: !0
      } : {},
      ...e.playsInline === !0 ? {
        playsInline: !0
      } : {}
    };
  }
  function g() {
    return {
      ...b()
    };
  }
  const [r, x] = R(() => {
  });
  return m(() => {
    if (e.lazyLoad) {
      const l = new IntersectionObserver(function(E) {
        E.forEach(function(v) {
          if (!v.isIntersecting)
            return;
          const o = v.target;
          try {
            Array.from(o.children).filter(
              (t) => t instanceof HTMLElement && t.tagName === "SOURCE"
            ).forEach((t) => {
              const y = t.dataset.src;
              y && (t.src = y);
            }), o.load(), l.unobserve(o);
          } catch (t) {
            console.error("Error loading lazy video:", t);
          }
        });
      });
      n.current && l.observe(n.current), x(l);
    }
  }, []), m(() => () => {
    r && r.disconnect();
  }, []), /* @__PURE__ */ z(
    "div",
    {
      style: {
        position: "relative"
      },
      children: [
        /* @__PURE__ */ i(
          "video",
          {
            className: "builder-video",
            ...g(),
            ref: n,
            preload: e.lazyLoad ? "none" : e.preload || "metadata",
            style: {
              width: "100%",
              height: "100%",
              ...(a = e.attributes) == null ? void 0 : a.style,
              objectFit: e.fit,
              objectPosition: e.position,
              // Hack to get object fit to work as expected and
              // not have the video overflow
              borderRadius: "1px",
              ...e.aspectRatio ? {
                position: "absolute"
              } : null
            },
            poster: e.posterImage,
            children: /* @__PURE__ */ i(
              "source",
              {
                type: "video/mp4",
                ...e.lazyLoad ? {
                  "data-src": e.video
                } : {
                  src: e.video
                }
              }
            )
          }
        ),
        e.aspectRatio && !(e.fitContent && ((d = (c = e.builderBlock) == null ? void 0 : c.children) != null && d.length)) ? /* @__PURE__ */ i(
          "div",
          {
            style: {
              width: "100%",
              paddingTop: e.aspectRatio * 100 + "%",
              pointerEvents: "none",
              fontSize: "0px"
            }
          }
        ) : null,
        (s = (u = e.builderBlock) == null ? void 0 : u.children) != null && s.length && e.fitContent ? /* @__PURE__ */ i(
          "div",
          {
            style: {
              display: "flex",
              flexDirection: "column",
              alignItems: "stretch"
            },
            children: e.children
          }
        ) : null,
        (h = (f = e.builderBlock) == null ? void 0 : f.children) != null && h.length && !e.fitContent ? /* @__PURE__ */ i(
          "div",
          {
            style: {
              pointerEvents: "none",
              display: "flex",
              flexDirection: "column",
              alignItems: "stretch",
              position: "absolute",
              top: "0",
              left: "0",
              width: "100%",
              height: "100%"
            },
            children: e.children
          }
        ) : null
      ]
    }
  );
}
export {
  j as default
};
